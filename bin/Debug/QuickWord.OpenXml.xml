<?xml version="1.0"?>
<doc>
    <assembly>
        <name>QuickWord.OpenXml</name>
    </assembly>
    <members>
        <member name="T:QuickWord.OpenXml.BodyExtensions">
            <summary>
            A set of extension methods for the <see cref="T:DocumentFormat.OpenXml.Wordprocessing.Body"/> class.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.BodyExtensions.GetSectionProperties(DocumentFormat.OpenXml.Wordprocessing.Body)">
            <summary>
            Gets the <see cref="T:DocumentFormat.OpenXml.Wordprocessing.SectionProperties" /> object of the <see cref="T:DocumentFormat.OpenXml.Wordprocessing.Body" />.
            <para>Returns <see langword="null" /> if the node doesn't exist.</para>
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:QuickWord.OpenXml.BodyExtensions.GetPageMargin(DocumentFormat.OpenXml.Wordprocessing.Body)">
            <summary>
            Specifies the page margins for all pages in this section.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.PageMargin" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.BodyExtensions.GetPageSize(DocumentFormat.OpenXml.Wordprocessing.Body)">
            <summary>
            Specifies the properties (size and orientation) for all pages in the current section.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.PageSize" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.BodyExtensions.PageMargin(DocumentFormat.OpenXml.Wordprocessing.Body,DocumentFormat.OpenXml.Wordprocessing.PageMargin)">
            <summary>
            Specifies the page margins for all pages in this section.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.PageMargin" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.BodyExtensions.PageSize(DocumentFormat.OpenXml.Wordprocessing.Body,DocumentFormat.OpenXml.Wordprocessing.PageSize)">
            <summary>
            Specifies the properties (size and orientation) for all pages in the current section.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.PageSize" /></para>
            </summary>
        </member>
        <member name="P:QuickWord.OpenXml.DrawingExtensions.Cropping.LeftFactor">
            <summary>
            Left cropping factor of the drawing, where 0.0 is no cropping and 1.0 is full cropping.
            </summary>
        </member>
        <member name="P:QuickWord.OpenXml.DrawingExtensions.Cropping.TopFactor">
            <summary>
            Top cropping factor of the drawing, where 0.0 is no cropping and 1.0 is full cropping.
            </summary>
        </member>
        <member name="P:QuickWord.OpenXml.DrawingExtensions.Cropping.RightFactor">
            <summary>
            Right cropping factor of the drawing, where 0.0 is no cropping and 1.0 is full cropping.
            </summary>
        </member>
        <member name="P:QuickWord.OpenXml.DrawingExtensions.Cropping.BottomFactor">
            <summary>
            Bottom cropping factor of the drawing, where 0.0 is no cropping and 1.0 is full cropping.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.DrawingExtensions.DrawingAnchorSpecificExtensions.AllowOverlappingValue(DocumentFormat.OpenXml.Wordprocessing.Drawing)">
            <summary>
            Specifies whether objects shall be allowed to overlap the drawing.
            </summary>
            <exception cref="T:System.InvalidOperationException">Occurs when the drawing is not anchored.</exception>
        </member>
        <member name="M:QuickWord.OpenXml.DrawingExtensions.DrawingAnchorSpecificExtensions.BehindTextValue(DocumentFormat.OpenXml.Wordprocessing.Drawing)">
            <summary>
            Specifies whether the drawing shall be displayed behind the document text.
            </summary>
            <exception cref="T:System.InvalidOperationException">Occurs when the drawing is not anchored.</exception>
        </member>
        <member name="M:QuickWord.OpenXml.DrawingExtensions.DrawingAnchorSpecificExtensions.LayoutInTableCellValue(DocumentFormat.OpenXml.Wordprocessing.Drawing)">
            <summary>
            The "Layout in table cell" option is supplied for backward compatibility with
            older versions of Word and older file formats. For example, in a *.doc file,
            you can't put an image whose Text Wrapping is set to "Square" inside
            a table cell unless the "Layout in table cell" option is selected.
            </summary>
            <exception cref="T:System.InvalidOperationException">Occurs when the drawing is not anchored.</exception>
        </member>
        <member name="M:QuickWord.OpenXml.DrawingExtensions.DrawingAnchorSpecificExtensions.LockedValue(DocumentFormat.OpenXml.Wordprocessing.Drawing)">
            <summary>
            Specifies whether the drawing's anchor shall be locked.
            </summary>
            <exception cref="T:System.InvalidOperationException">Occurs when the drawing is not anchored.</exception>
        </member>
        <member name="M:QuickWord.OpenXml.DrawingExtensions.DrawingAnchorSpecificExtensions.AllowOverlapping(DocumentFormat.OpenXml.Wordprocessing.Drawing,System.Boolean)">
            <inheritdoc cref="M:QuickWord.OpenXml.DrawingExtensions.DrawingAnchorSpecificExtensions.AllowOverlappingValue(DocumentFormat.OpenXml.Wordprocessing.Drawing)" />
        </member>
        <member name="M:QuickWord.OpenXml.DrawingExtensions.DrawingAnchorSpecificExtensions.BehindText(DocumentFormat.OpenXml.Wordprocessing.Drawing,System.Boolean)">
            <inheritdoc cref="M:QuickWord.OpenXml.DrawingExtensions.DrawingAnchorSpecificExtensions.BehindTextValue(DocumentFormat.OpenXml.Wordprocessing.Drawing)" />
        </member>
        <member name="M:QuickWord.OpenXml.DrawingExtensions.DrawingAnchorSpecificExtensions.LayoutInTableCell(DocumentFormat.OpenXml.Wordprocessing.Drawing,System.Boolean)">
            <inheritdoc cref="M:QuickWord.OpenXml.DrawingExtensions.DrawingAnchorSpecificExtensions.LayoutInTableCellValue(DocumentFormat.OpenXml.Wordprocessing.Drawing)" />
        </member>
        <member name="M:QuickWord.OpenXml.DrawingExtensions.DrawingAnchorSpecificExtensions.Locked(DocumentFormat.OpenXml.Wordprocessing.Drawing,System.Boolean)">
            <inheritdoc cref="M:QuickWord.OpenXml.DrawingExtensions.DrawingAnchorSpecificExtensions.LockedValue(DocumentFormat.OpenXml.Wordprocessing.Drawing)" />
        </member>
        <member name="M:QuickWord.OpenXml.DrawingExtensions.DrawingConversionExtensions.IsInlined(DocumentFormat.OpenXml.Wordprocessing.Drawing)">
            <summary>
            Determines whether the drawing is inlined. This means that the drawing is in line with the text.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.DrawingExtensions.DrawingConversionExtensions.IsAnchored(DocumentFormat.OpenXml.Wordprocessing.Drawing)">
            <summary>
            Determines whether the drawing is anchored. Anchored drawings allow for more control over positioning and enables text wrapping.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.DrawingExtensions.DrawingConversionExtensions.ToInlinedDrawing(DocumentFormat.OpenXml.Wordprocessing.Drawing)">
            <summary>
            Converts the drawing into an inlined drawing (if applicable). This means that the drawing will be in line with the text.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.DrawingExtensions.DrawingConversionExtensions.ToAnchoredDrawing(DocumentFormat.OpenXml.Wordprocessing.Drawing)">
            <summary>
            Converts the drawing into an anchored drawing (if applicable). Anchored drawings allow for more control over positioning and enables text wrapping.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.DrawingExtensions.DrawingCroppingExtensions.GetCropping(DocumentFormat.OpenXml.Wordprocessing.Drawing)">
            <summary>
            Gets the cropping of the image on each side. Factor values are between 0 and 1 where 0.0 is no cropping and 1.0 is full cropping.
            <para>Returns <see langword="null" /> if cropping is not set.</para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.DrawingExtensions.DrawingCroppingExtensions.GetUncroppedWidth(DocumentFormat.OpenXml.Wordprocessing.Drawing,QuickWord.OpenXml.ImageMeasuringUnits)">
            <summary>
            Gets the uncropped width of the image.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.DrawingExtensions.DrawingCroppingExtensions.GetUncroppedHeight(DocumentFormat.OpenXml.Wordprocessing.Drawing,QuickWord.OpenXml.ImageMeasuringUnits)">
            <summary>
            Gets the uncropped height of the image.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.DrawingExtensions.DrawingCroppingExtensions.ResetCropping(DocumentFormat.OpenXml.Wordprocessing.Drawing)">
            <summary>
            Resets the cropping of the image.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.DrawingExtensions.DrawingCroppingExtensions.Cropping(DocumentFormat.OpenXml.Wordprocessing.Drawing,QuickWord.OpenXml.DrawingExtensions.Cropping)">
            <summary>
            Sets the cropping of the image.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.DrawingExtensions.DrawingCroppingExtensions.Cropping(DocumentFormat.OpenXml.Wordprocessing.Drawing,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Sets the cropping of the image on each side. Factor values are between 0 and 1 where 0.0 is no cropping and 1.0 is full cropping.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.DrawingExtensions.DrawingCroppingExtensions.LeftCropping(DocumentFormat.OpenXml.Wordprocessing.Drawing,System.Double)">
            <summary>
            Sets the left cropping of the image, where 0.0 is no cropping and 1.0 is full cropping.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.DrawingExtensions.DrawingCroppingExtensions.RightCropping(DocumentFormat.OpenXml.Wordprocessing.Drawing,System.Double)">
            <summary>
            Sets the right cropping of the image, where 0.0 is no cropping and 1.0 is full cropping.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.DrawingExtensions.DrawingCroppingExtensions.TopCropping(DocumentFormat.OpenXml.Wordprocessing.Drawing,System.Double)">
            <summary>
            Sets the top cropping of the image, where 0.0 is no cropping and 1.0 is full cropping.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.DrawingExtensions.DrawingCroppingExtensions.BottomCropping(DocumentFormat.OpenXml.Wordprocessing.Drawing,System.Double)">
            <summary>
            Sets the bottom cropping of the image, where 0.0 is no cropping and 1.0 is full cropping.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.DrawingExtensions.DrawingEffectExtensions.OpacityValue(DocumentFormat.OpenXml.Wordprocessing.Drawing)">
            <summary>
            Gets the opacity of the image as a value between 0.0 (fully invisible) and 1.0 (fully visible).
            <para>Returns <see langword="null" /> if the property is not set.</para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.DrawingExtensions.DrawingEffectExtensions.Opacity(DocumentFormat.OpenXml.Wordprocessing.Drawing,System.Double)">
            <summary>
            Sets the opacity of the image with a value between 0.0 (fully invisible) and 1.0 (fully visible).
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.DrawingExtensions.DrawingTransformationExtensions.GetWidth(DocumentFormat.OpenXml.Wordprocessing.Drawing,QuickWord.OpenXml.ImageMeasuringUnits)">
            <summary>
            Gets the width of the image in the desired units.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.DrawingExtensions.DrawingTransformationExtensions.GetHeight(DocumentFormat.OpenXml.Wordprocessing.Drawing,QuickWord.OpenXml.ImageMeasuringUnits)">
            <summary>
            Gets the height of the image in the desired units.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.DrawingExtensions.DrawingTransformationExtensions.GetOriginalWidth(DocumentFormat.OpenXml.Wordprocessing.Drawing,QuickWord.OpenXml.ImageMeasuringUnits)">
            <summary>
            Gets the original width of the image before any scaling or cropping.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.DrawingExtensions.DrawingTransformationExtensions.GetOriginalHeight(DocumentFormat.OpenXml.Wordprocessing.Drawing,QuickWord.OpenXml.ImageMeasuringUnits)">
            <summary>
            Gets the original height of the image before any scaling or cropping.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.DrawingExtensions.DrawingTransformationExtensions.RotationValue(DocumentFormat.OpenXml.Wordprocessing.Drawing)">
            <summary>
            Gets the rotation angle of the image in degrees.
            <para>Returns <see langword="null" /> if the property is not set.</para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.DrawingExtensions.DrawingTransformationExtensions.FlipHorizontallyValue(DocumentFormat.OpenXml.Wordprocessing.Drawing)">
            <summary>
            Specifies whether the image is horizontally flipped.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.DrawingExtensions.DrawingTransformationExtensions.FlipVerticallyValue(DocumentFormat.OpenXml.Wordprocessing.Drawing)">
            <summary>
            Specifies whether the image is vertically flipped.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.DrawingExtensions.DrawingTransformationExtensions.AbsoluteHorizontalPositionValue(DocumentFormat.OpenXml.Wordprocessing.Drawing,QuickWord.OpenXml.ImageMeasuringUnits,System.Nullable{DocumentFormat.OpenXml.Drawing.Wordprocessing.HorizontalRelativePositionValues}@)">
            <summary>
            Gets the absolute horizontal position of the image in the desired units.
            <para>Returns <see langword="null" /> if the property is not set.</para>
            </summary>
            <exception cref="T:System.InvalidOperationException">Occurs when the drawing is not anchored.</exception>
        </member>
        <member name="M:QuickWord.OpenXml.DrawingExtensions.DrawingTransformationExtensions.AbsoluteVerticalPositionValue(DocumentFormat.OpenXml.Wordprocessing.Drawing,QuickWord.OpenXml.ImageMeasuringUnits,System.Nullable{DocumentFormat.OpenXml.Drawing.Wordprocessing.VerticalRelativePositionValues}@)">
            <summary>
            Gets the absolute vertical position of the image in the desired units.
            <para>Returns <see langword="null" /> if the property is not set.</para>
            </summary>
            <exception cref="T:System.InvalidOperationException">Occurs when the drawing is not anchored.</exception>
        </member>
        <member name="M:QuickWord.OpenXml.DrawingExtensions.DrawingTransformationExtensions.HorizontalAlignmentValue(DocumentFormat.OpenXml.Wordprocessing.Drawing,System.Nullable{DocumentFormat.OpenXml.Drawing.Wordprocessing.HorizontalRelativePositionValues}@)">
            <summary>
            Gets the horizontal position of the image relative to the page margins.
            <para>Returns <see langword="null" /> if the property is not set.</para>
            </summary>
            <exception cref="T:System.InvalidOperationException">Occurs when the drawing is not anchored.</exception>
        </member>
        <member name="M:QuickWord.OpenXml.DrawingExtensions.DrawingTransformationExtensions.VerticalAlignmentValue(DocumentFormat.OpenXml.Wordprocessing.Drawing,System.Nullable{DocumentFormat.OpenXml.Drawing.Wordprocessing.VerticalRelativePositionValues}@)">
            <summary>
            Gets the vertical position of the image relative to the page margins.
            <para>Returns <see langword="null" /> if the property is not set.</para>
            </summary>
            <exception cref="T:System.InvalidOperationException">Occurs when the drawing is not anchored.</exception>
        </member>
        <member name="M:QuickWord.OpenXml.DrawingExtensions.DrawingTransformationExtensions.SetWidth(DocumentFormat.OpenXml.Wordprocessing.Drawing,System.Double,QuickWord.OpenXml.ImageMeasuringUnits,System.Boolean)">
            <summary>
            Sets the width of the image in the desired units.
            </summary>
            <param name="keepAspectRatio">Causes the height of the image to automatically adjust in order to preserve the aspect ratio.</param>
        </member>
        <member name="M:QuickWord.OpenXml.DrawingExtensions.DrawingTransformationExtensions.SetHeight(DocumentFormat.OpenXml.Wordprocessing.Drawing,System.Double,QuickWord.OpenXml.ImageMeasuringUnits,System.Boolean)">
            <summary>
            Sets the height of the image in the desired units.
            </summary>
            <param name="keepAspectRatio">Causes the width of the image to automatically adjust in order to preserve the aspect ratio.</param>
        </member>
        <member name="M:QuickWord.OpenXml.DrawingExtensions.DrawingTransformationExtensions.Resize(DocumentFormat.OpenXml.Wordprocessing.Drawing,System.Double,System.Double,QuickWord.OpenXml.ImageMeasuringUnits)">
            <summary>
            Resizes the image to the given width and height and in the desired units.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.DrawingExtensions.DrawingTransformationExtensions.ResetSize(DocumentFormat.OpenXml.Wordprocessing.Drawing)">
            <summary>
            Resets the image to its original size.
            <para>Note: This method does not affect cropping. Any performed cropping will still be preserved.</para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.DrawingExtensions.DrawingTransformationExtensions.ScaleHorizontally(DocumentFormat.OpenXml.Wordprocessing.Drawing,System.Double,System.Boolean)">
            <summary>
            Scales the image horizontally by the given factor.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.DrawingExtensions.DrawingTransformationExtensions.ScaleVertically(DocumentFormat.OpenXml.Wordprocessing.Drawing,System.Double,System.Boolean)">
            <summary>
            Scales the image vertically by the given factor.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.DrawingExtensions.DrawingTransformationExtensions.Scale(DocumentFormat.OpenXml.Wordprocessing.Drawing,System.Double,System.Double)">
            <summary>
            Scales the image by the given factors.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.DrawingExtensions.DrawingTransformationExtensions.Rotation(DocumentFormat.OpenXml.Wordprocessing.Drawing,System.Double)">
            <summary>
            Sets the rotation of the image to the given angle in degrees.
            </summary>
            <param name="angle">Rotation angle in degrees.</param>
        </member>
        <member name="M:QuickWord.OpenXml.DrawingExtensions.DrawingTransformationExtensions.FlipHorizontally(DocumentFormat.OpenXml.Wordprocessing.Drawing,System.Boolean)">
            <inheritdoc cref="M:QuickWord.OpenXml.DrawingExtensions.DrawingTransformationExtensions.FlipHorizontallyValue(DocumentFormat.OpenXml.Wordprocessing.Drawing)" />
        </member>
        <member name="M:QuickWord.OpenXml.DrawingExtensions.DrawingTransformationExtensions.FlipVertically(DocumentFormat.OpenXml.Wordprocessing.Drawing,System.Boolean)">
            <inheritdoc cref="M:QuickWord.OpenXml.DrawingExtensions.DrawingTransformationExtensions.FlipVerticallyValue(DocumentFormat.OpenXml.Wordprocessing.Drawing)" />
        </member>
        <member name="M:QuickWord.OpenXml.DrawingExtensions.DrawingTransformationExtensions.AbsoluteHorizontalPosition(DocumentFormat.OpenXml.Wordprocessing.Drawing,System.Double,QuickWord.OpenXml.ImageMeasuringUnits,DocumentFormat.OpenXml.Drawing.Wordprocessing.HorizontalRelativePositionValues)">
            <summary>
            Sets the absolute horizontal position of the image in the given units.
            </summary>
            <exception cref="T:System.InvalidOperationException">Occurs when the drawing is not anchored.</exception>
        </member>
        <member name="M:QuickWord.OpenXml.DrawingExtensions.DrawingTransformationExtensions.AbsoluteVerticalPosition(DocumentFormat.OpenXml.Wordprocessing.Drawing,System.Double,QuickWord.OpenXml.ImageMeasuringUnits,DocumentFormat.OpenXml.Drawing.Wordprocessing.VerticalRelativePositionValues)">
            <summary>
            Sets the absolute vertical position of the image in the given units.
            </summary>
            <exception cref="T:System.InvalidOperationException">Occurs when the drawing is not anchored.</exception>
        </member>
        <member name="M:QuickWord.OpenXml.DrawingExtensions.DrawingTransformationExtensions.HorizontalAlignment(DocumentFormat.OpenXml.Wordprocessing.Drawing,DocumentFormat.OpenXml.Drawing.Wordprocessing.HorizontalAlignmentValues,DocumentFormat.OpenXml.Drawing.Wordprocessing.HorizontalRelativePositionValues)">
            <summary>
            Sets the horizontal alignment of the image.
            </summary>
            <exception cref="T:System.InvalidOperationException">Occurs when the drawing is not anchored.</exception>
        </member>
        <member name="M:QuickWord.OpenXml.DrawingExtensions.DrawingTransformationExtensions.VerticalAlignment(DocumentFormat.OpenXml.Wordprocessing.Drawing,DocumentFormat.OpenXml.Drawing.Wordprocessing.VerticalAlignmentValues,DocumentFormat.OpenXml.Drawing.Wordprocessing.VerticalRelativePositionValues)">
            <summary>
            Sets the vertical alignment of the image.
            </summary>
            <exception cref="T:System.InvalidOperationException">Occurs when the drawing is not anchored.</exception>
        </member>
        <member name="M:QuickWord.OpenXml.DrawingExtensions.DrawingUtilityExtensions.GetSourceRectangle(DocumentFormat.OpenXml.Wordprocessing.Drawing)">
            <summary>
            Gets the source rectangle responsible for cropping the image. Returns <see langword="null" /> if the image is not cropped.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.DrawingExtensions.DrawingWrappingExtensions.GetWrappingType(DocumentFormat.OpenXml.Wordprocessing.Drawing)">
            <summary>
            Gets the wrapping type of the drawing.
            </summary>
            <exception cref="T:System.InvalidOperationException">Occurs when the drawing is not anchored.</exception>
            <exception cref="T:System.Exception">Occurs when there is no wrapping property in the anchor.</exception>
        </member>
        <member name="M:QuickWord.OpenXml.DrawingExtensions.DrawingWrappingExtensions.NoTextWrapping(DocumentFormat.OpenXml.Wordprocessing.Drawing)">
            <summary>
            Makes the drawing appear either in front or behind the text (if BehindText() is set).
            </summary>
            <exception cref="T:System.InvalidOperationException">Occurs when the drawing is not anchored.</exception>
        </member>
        <member name="M:QuickWord.OpenXml.DrawingExtensions.DrawingWrappingExtensions.SquareWrapping(DocumentFormat.OpenXml.Wordprocessing.Drawing,System.Double,System.Double,System.Double,System.Double,QuickWord.OpenXml.ImageMeasuringUnits,DocumentFormat.OpenXml.Drawing.Wordprocessing.WrapTextValues)">
            <summary>
            Sets "Square" wrapping with the specified distances from the closest text (basically the margin around the drawing).
            </summary>
            <exception cref="T:System.InvalidOperationException">Occurs when the drawing is not anchored.</exception>
        </member>
        <member name="M:QuickWord.OpenXml.DrawingExtensions.DrawingWrappingExtensions.TightWrapping(DocumentFormat.OpenXml.Wordprocessing.Drawing,DocumentFormat.OpenXml.Drawing.Wordprocessing.WrapPolygon,System.Double,System.Double,QuickWord.OpenXml.ImageMeasuringUnits,DocumentFormat.OpenXml.Drawing.Wordprocessing.WrapTextValues)">
            <summary>
            Sets "Tight" wrapping with the specified shape and distances from the closest text (basically a left and right margin).
            </summary>
            <exception cref="T:System.InvalidOperationException">Occurs when the drawing is not anchored.</exception>
        </member>
        <member name="M:QuickWord.OpenXml.DrawingExtensions.DrawingWrappingExtensions.ThroughWrapping(DocumentFormat.OpenXml.Wordprocessing.Drawing,DocumentFormat.OpenXml.Drawing.Wordprocessing.WrapPolygon,System.Double,System.Double,QuickWord.OpenXml.ImageMeasuringUnits,DocumentFormat.OpenXml.Drawing.Wordprocessing.WrapTextValues)">
            <summary>
            Sets "Through" wrapping with the specified shape and distances from the closest text (basically a left and right margin).
            </summary>
            <exception cref="T:System.InvalidOperationException">Occurs when the drawing is not anchored.</exception>
        </member>
        <member name="M:QuickWord.OpenXml.DrawingExtensions.DrawingWrappingExtensions.TopAndBottomWrapping(DocumentFormat.OpenXml.Wordprocessing.Drawing,System.Double,System.Double,QuickWord.OpenXml.ImageMeasuringUnits)">
            <summary>
            Sets "Top and bottom" wrapping with the specified distances from the closest text (basically a top and bottom margin).
            </summary>
            <exception cref="T:System.InvalidOperationException">Occurs when the drawing is not anchored.</exception>
        </member>
        <member name="M:QuickWord.OpenXml.DrawingExtensions.DrawingWrappingExtensions.ResetAllWrapping(DocumentFormat.OpenXml.Wordprocessing.Drawing)">
            <summary>
            Removes and resets all wrapping properties of the drawing.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.DrawingExtensions.MainDocumentPartExtensions.ExtractAllImages(DocumentFormat.OpenXml.Packaging.MainDocumentPart)">
            <summary>
            Extracts all the images from the document.
            </summary>
            <returns>A collection of <see cref="T:System.IO.Stream" /> objects which hold the image data.</returns>
        </member>
        <member name="M:QuickWord.OpenXml.DrawingExtensions.MainDocumentPartExtensions.CreateImage(DocumentFormat.OpenXml.Packaging.MainDocumentPart,System.String,DocumentFormat.OpenXml.Packaging.ImagePartType)">
            <summary>
            Creates a new <see cref="T:DocumentFormat.OpenXml.Wordprocessing.Drawing" /> object from the specified image file, while automatically determining the image dimensions.
            <para>This method uses a <see cref="T:System.Drawing.Bitmap" /> object to measure the dimensions of the image, which is only supported on Windows.</para>
            </summary>
            <param name="fileName">File path of the image file.</param>
            <param name="type">File format of the image.</param>
            <returns>The <see cref="T:DocumentFormat.OpenXml.Wordprocessing.Drawing" /> object which can be inserted into a <see cref="T:DocumentFormat.OpenXml.Wordprocessing.Run" /> object.</returns>
        </member>
        <member name="M:QuickWord.OpenXml.DrawingExtensions.MainDocumentPartExtensions.CreateImage(DocumentFormat.OpenXml.Packaging.MainDocumentPart,System.String,DocumentFormat.OpenXml.Packaging.ImagePartType,System.Int32,System.Int32)">
            <summary>
            Creates a new <see cref="T:DocumentFormat.OpenXml.Wordprocessing.Drawing" /> object from the specified image file.
            </summary>
            <param name="fileName">File path of the image file.</param>
            <param name="type">File format of the image.</param>
            <param name="width">Desired width of the image.</param>
            <param name="height">Desired height of the image.</param>
            <returns>The <see cref="T:DocumentFormat.OpenXml.Wordprocessing.Drawing" /> object which can be inserted into a <see cref="T:DocumentFormat.OpenXml.Wordprocessing.Run" /> object.</returns>
        </member>
        <member name="T:QuickWord.OpenXml.Extras.Extensions.BodyExtraExtensions">
            <summary>
            Additional extension methods for the <see cref="T:DocumentFormat.OpenXml.Wordprocessing.Body"/> class.
            </summary>
        </member>
        <member name="T:QuickWord.OpenXml.Extras.ParagraphExtraExtensions">
            <summary>
            Additional extension methods for the <see cref="T:DocumentFormat.OpenXml.Wordprocessing.Paragraph"/> class.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.ParagraphExtraExtensions.CloneFormatting(DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Clones all formatting properties from the paragraph. This does not include any Run formatting.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.ParagraphExtraExtensions.ApplyFormatting(DocumentFormat.OpenXml.Wordprocessing.Paragraph,QuickWord.OpenXml.Extras.ParagraphFormatting,System.Boolean)">
            <summary>
            Applies the given formatting properties to the paragraph (replaces every possible property of the paragraph unless <c>ignoreNulls</c> is set to true).
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.ParagraphExtraExtensions.ApplyRunFormatting(DocumentFormat.OpenXml.Wordprocessing.Paragraph,QuickWord.OpenXml.Extras.RunFormatting,System.Boolean)">
            <summary>
            Applies formatting to every run in the paragraph (replaces every possible property of each run unless <c>ignoreNulls</c> is set to true).
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.ParagraphExtraExtensions.ResetFormatting(DocumentFormat.OpenXml.Wordprocessing.Paragraph,System.Boolean)">
            <summary>
            Resets every possible property of the paragraph.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.ParagraphExtraExtensions.ResetRunFormatting(DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Resets every possible property of each run in the paragraph.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.ParagraphExtraExtensions.GetText(DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Gets the text that is a combination of all the runs in the paragraph.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.ParagraphExtraExtensions.LineSpacingValue(DocumentFormat.OpenXml.Wordprocessing.Paragraph,QuickWord.OpenXml.LineMeasuringUnits)">
            <summary>
            Specifies the spacing that should be inserted between lines of text in the paragraph.
            <para>Child of <see cref="T:DocumentFormat.OpenXml.Wordprocessing.SpacingBetweenLines" />.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.SpacingBetweenLines" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.ParagraphExtraExtensions.SpacingBeforeValue(DocumentFormat.OpenXml.Wordprocessing.Paragraph,QuickWord.OpenXml.LineMeasuringUnits)">
            <summary>
            Specifies the spacing that should be inserted before the paragraph.
            <para>Child of <see cref="T:DocumentFormat.OpenXml.Wordprocessing.SpacingBetweenLines" />.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.SpacingBetweenLines" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.ParagraphExtraExtensions.SpacingAfterValue(DocumentFormat.OpenXml.Wordprocessing.Paragraph,QuickWord.OpenXml.LineMeasuringUnits)">
            <summary>
            Specifies the spacing that should be inserted after the paragraph.
            <para>Child of <see cref="T:DocumentFormat.OpenXml.Wordprocessing.SpacingBetweenLines" />.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.SpacingBetweenLines" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.ParagraphExtraExtensions.LeftIndentationValue(DocumentFormat.OpenXml.Wordprocessing.Paragraph,QuickWord.OpenXml.IndentationUnits)">
            <summary>
            Specifies the indentation of the left edge of the paragraph.
            <para>Child of <see cref="T:DocumentFormat.OpenXml.Wordprocessing.Indentation" />.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.Indentation" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.ParagraphExtraExtensions.RightIndentationValue(DocumentFormat.OpenXml.Wordprocessing.Paragraph,QuickWord.OpenXml.IndentationUnits)">
            <summary>
            Specifies the indentation of the right edge of the paragraph.
            <para>Child of <see cref="T:DocumentFormat.OpenXml.Wordprocessing.Indentation" />.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.Indentation" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.ParagraphExtraExtensions.LineSpacing(DocumentFormat.OpenXml.Wordprocessing.Paragraph,System.Double,QuickWord.OpenXml.LineMeasuringUnits)">
            <inheritdoc cref="M:QuickWord.OpenXml.Extras.ParagraphExtraExtensions.LineSpacingValue(DocumentFormat.OpenXml.Wordprocessing.Paragraph,QuickWord.OpenXml.LineMeasuringUnits)" />
        </member>
        <member name="M:QuickWord.OpenXml.Extras.ParagraphExtraExtensions.SpacingBefore(DocumentFormat.OpenXml.Wordprocessing.Paragraph,System.Double,QuickWord.OpenXml.LineMeasuringUnits)">
            <inheritdoc cref="M:QuickWord.OpenXml.Extras.ParagraphExtraExtensions.SpacingBeforeValue(DocumentFormat.OpenXml.Wordprocessing.Paragraph,QuickWord.OpenXml.LineMeasuringUnits)" />
        </member>
        <member name="M:QuickWord.OpenXml.Extras.ParagraphExtraExtensions.SpacingAfter(DocumentFormat.OpenXml.Wordprocessing.Paragraph,System.Double,QuickWord.OpenXml.LineMeasuringUnits)">
            <inheritdoc cref="M:QuickWord.OpenXml.Extras.ParagraphExtraExtensions.SpacingAfterValue(DocumentFormat.OpenXml.Wordprocessing.Paragraph,QuickWord.OpenXml.LineMeasuringUnits)" />
        </member>
        <member name="M:QuickWord.OpenXml.Extras.ParagraphExtraExtensions.LeftIndentation(DocumentFormat.OpenXml.Wordprocessing.Paragraph,System.Double,QuickWord.OpenXml.IndentationUnits)">
            <inheritdoc cref="M:QuickWord.OpenXml.Extras.ParagraphExtraExtensions.LeftIndentationValue(DocumentFormat.OpenXml.Wordprocessing.Paragraph,QuickWord.OpenXml.IndentationUnits)" />
        </member>
        <member name="M:QuickWord.OpenXml.Extras.ParagraphExtraExtensions.RightIndentation(DocumentFormat.OpenXml.Wordprocessing.Paragraph,System.Double,QuickWord.OpenXml.IndentationUnits)">
            <inheritdoc cref="M:QuickWord.OpenXml.Extras.ParagraphExtraExtensions.RightIndentationValue(DocumentFormat.OpenXml.Wordprocessing.Paragraph,QuickWord.OpenXml.IndentationUnits)" />
        </member>
        <member name="M:QuickWord.OpenXml.Extras.ParagraphExtraExtensions.FillColor(DocumentFormat.OpenXml.Wordprocessing.Paragraph,System.String)">
            <summary>
            Sets the background fill color of the paragraph.
            <para><c>Fill</c> property of <see cref="T:DocumentFormat.OpenXml.Wordprocessing.Shading" />.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.Shading" /></para>
            </summary>
        </member>
        <member name="T:QuickWord.OpenXml.Extras.RunExtraExtensions">
            <summary>
            Additional extension methods for the <see cref="T:DocumentFormat.OpenXml.Wordprocessing.Run"/> class.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.RunExtraExtensions.CloneFormatting(DocumentFormat.OpenXml.Wordprocessing.Run)">
            <summary>
            Clones all formatting properties from the run.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.RunExtraExtensions.ApplyFormatting(DocumentFormat.OpenXml.Wordprocessing.Run,QuickWord.OpenXml.Extras.RunFormatting,System.Boolean)">
            <summary>
            Applies the given formatting properties to the run (replaces every possible property of the run unless <c>ignoreNulls</c> is set to true).
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.RunExtraExtensions.ResetFormatting(DocumentFormat.OpenXml.Wordprocessing.Run)">
            <summary>
            Resets every possible property of the run.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.RunExtraExtensions.GetText(DocumentFormat.OpenXml.Wordprocessing.Run)">
            <summary>
            Gets the text of the run, while converting each <see cref="T:DocumentFormat.OpenXml.Wordprocessing.Break" /> into a <c><see cref="P:System.Environment.NewLine"/></c>.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.RunExtraExtensions.ManualWidthValue(DocumentFormat.OpenXml.Wordprocessing.Run,QuickWord.OpenXml.MeasuringUnits)">
            <summary>
            Specifies the width that the run shall be scaled to fit into.
            <para>Property of <see cref="T:DocumentFormat.OpenXml.Wordprocessing.FitText" />.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.FitText" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.RunExtraExtensions.Text(DocumentFormat.OpenXml.Wordprocessing.Run,System.String,System.Boolean)">
            <summary>
            Sets the text of the run.
            </summary>
            <param name="parseNewLineChars">
            Specifies whether <c><see cref="P:System.Environment.NewLine"/></c> chars should be parsed into <see cref="T:DocumentFormat.OpenXml.Wordprocessing.Break"/> objects.
            </param>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.RunExtraExtensions.Border(DocumentFormat.OpenXml.Wordprocessing.Run,System.Double,DocumentFormat.OpenXml.Wordprocessing.BorderValues,System.String,System.UInt32)">
            <summary>
            Sets the border of the run.
            <para><c>Size</c>, <c>Val</c> and <c>Color</c> properties of <see cref="T:DocumentFormat.OpenXml.Wordprocessing.Border" />.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.Border" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.RunExtraExtensions.FillColor(DocumentFormat.OpenXml.Wordprocessing.Run,System.String)">
            <summary>
            Sets the background fill color of the run.
            <para><c>Fill</c> property of <see cref="T:DocumentFormat.OpenXml.Wordprocessing.Shading" />.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.Shading" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.RunExtraExtensions.FontColor(DocumentFormat.OpenXml.Wordprocessing.Run,System.String)">
            <summary>
            Sets the color of the font.
            <para><c>Val</c> property of <see cref="T:DocumentFormat.OpenXml.Wordprocessing.Color" />.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.Color" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.RunExtraExtensions.FontFace(DocumentFormat.OpenXml.Wordprocessing.Run,System.String)">
            <summary>
            Sets the font face of the ASCII characters.
            <para><c>Ascii</c> property of <see cref="T:DocumentFormat.OpenXml.Wordprocessing.RunFonts" />.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.RunFonts" /></para>
            </summary>
            <param name="faceName">Font face, such as "Comic Sans MS" or "Times New Roman".</param>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.RunExtraExtensions.Language(DocumentFormat.OpenXml.Wordprocessing.Run,System.String)">
            <summary>
            Sets the language of the run.
            <para><c>Val</c> property of <see cref="T:DocumentFormat.OpenXml.Wordprocessing.Languages" />.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.Languages" /></para>
            </summary>
            <param name="latinLanguageCode">Latin language code, such as "en-GB", "en-US" or "de-DE".</param>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.RunExtraExtensions.ManualWidth(DocumentFormat.OpenXml.Wordprocessing.Run,System.Double,QuickWord.OpenXml.MeasuringUnits)">
            <inheritdoc cref="M:QuickWord.OpenXml.Extras.RunExtraExtensions.ManualWidthValue(DocumentFormat.OpenXml.Wordprocessing.Run,QuickWord.OpenXml.MeasuringUnits)" />
        </member>
        <member name="M:QuickWord.OpenXml.Extras.RunExtraExtensions.Underline(DocumentFormat.OpenXml.Wordprocessing.Run,DocumentFormat.OpenXml.Wordprocessing.UnderlineValues,System.String)">
            <inheritdoc cref="M:QuickWord.OpenXml.RunExtensions.Underline(DocumentFormat.OpenXml.Wordprocessing.Run,DocumentFormat.OpenXml.Wordprocessing.Underline)" />
        </member>
        <member name="M:QuickWord.OpenXml.Extras.RunExtraExtensions.AppendText(DocumentFormat.OpenXml.Wordprocessing.Run,System.String,System.Boolean)">
            <summary>
            Appends text at the end of the run.
            </summary>
            <param name="parseNewLineChars">
            Specifies whether <c><see cref="P:System.Environment.NewLine"/></c> chars should be parsed into <see cref="T:DocumentFormat.OpenXml.Wordprocessing.Break"/> objects.
            </param>
        </member>
        <member name="T:QuickWord.OpenXml.Extras.TableCellExtraExtensions">
            <summary>
            Additional extension methods for the <see cref="T:DocumentFormat.OpenXml.Wordprocessing.TableCell"/> class.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableCellExtraExtensions.CloneFormatting(DocumentFormat.OpenXml.Wordprocessing.TableCell)">
            <summary>
            Clones all formatting properties from the table cell.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableCellExtraExtensions.ApplyFormatting(DocumentFormat.OpenXml.Wordprocessing.TableCell,QuickWord.OpenXml.Extras.TableCellFormatting,System.Boolean)">
            <summary>
            Applies the given formatting properties to the table cell (replaces every possible property of the table cell unless <c>ignoreNulls</c> is set to true).
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableCellExtraExtensions.ResetFormatting(DocumentFormat.OpenXml.Wordprocessing.TableCell)">
            <summary>
            Resets every possible property of the table cell.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableCellExtraExtensions.LeftBorder(DocumentFormat.OpenXml.Wordprocessing.TableCell,DocumentFormat.OpenXml.Wordprocessing.LeftBorder)">
            <summary>
            Sets the left border of the cell.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableCellExtraExtensions.LeftBorder(DocumentFormat.OpenXml.Wordprocessing.TableCell,System.Double,DocumentFormat.OpenXml.Wordprocessing.BorderValues,System.String,System.UInt32)">
            <inheritdoc cref="M:QuickWord.OpenXml.Extras.TableCellExtraExtensions.LeftBorder(DocumentFormat.OpenXml.Wordprocessing.TableCell,DocumentFormat.OpenXml.Wordprocessing.LeftBorder)" />
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableCellExtraExtensions.TopBorder(DocumentFormat.OpenXml.Wordprocessing.TableCell,DocumentFormat.OpenXml.Wordprocessing.TopBorder)">
            <summary>
            Sets the top border of the cell.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableCellExtraExtensions.TopBorder(DocumentFormat.OpenXml.Wordprocessing.TableCell,System.Double,DocumentFormat.OpenXml.Wordprocessing.BorderValues,System.String,System.UInt32)">
            <inheritdoc cref="M:QuickWord.OpenXml.Extras.TableCellExtraExtensions.TopBorder(DocumentFormat.OpenXml.Wordprocessing.TableCell,DocumentFormat.OpenXml.Wordprocessing.TopBorder)" />
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableCellExtraExtensions.RightBorder(DocumentFormat.OpenXml.Wordprocessing.TableCell,DocumentFormat.OpenXml.Wordprocessing.RightBorder)">
            <summary>
            Sets the right border of the cell.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableCellExtraExtensions.RightBorder(DocumentFormat.OpenXml.Wordprocessing.TableCell,System.Double,DocumentFormat.OpenXml.Wordprocessing.BorderValues,System.String,System.UInt32)">
            <inheritdoc cref="M:QuickWord.OpenXml.Extras.TableCellExtraExtensions.RightBorder(DocumentFormat.OpenXml.Wordprocessing.TableCell,DocumentFormat.OpenXml.Wordprocessing.RightBorder)" />
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableCellExtraExtensions.BottomBorder(DocumentFormat.OpenXml.Wordprocessing.TableCell,DocumentFormat.OpenXml.Wordprocessing.BottomBorder)">
            <summary>
            Sets the bottom border of the cell.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableCellExtraExtensions.BottomBorder(DocumentFormat.OpenXml.Wordprocessing.TableCell,System.Double,DocumentFormat.OpenXml.Wordprocessing.BorderValues,System.String,System.UInt32)">
            <inheritdoc cref="M:QuickWord.OpenXml.Extras.TableCellExtraExtensions.BottomBorder(DocumentFormat.OpenXml.Wordprocessing.TableCell,DocumentFormat.OpenXml.Wordprocessing.BottomBorder)" />
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableCellExtraExtensions.InsideHorizontalBorder(DocumentFormat.OpenXml.Wordprocessing.TableCell,DocumentFormat.OpenXml.Wordprocessing.InsideHorizontalBorder)">
            <summary>
            Sets the inside-horizontal border of the cell.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableCellExtraExtensions.InsideHorizontalBorder(DocumentFormat.OpenXml.Wordprocessing.TableCell,System.Double,DocumentFormat.OpenXml.Wordprocessing.BorderValues,System.String,System.UInt32)">
            <inheritdoc cref="M:QuickWord.OpenXml.Extras.TableCellExtraExtensions.InsideHorizontalBorder(DocumentFormat.OpenXml.Wordprocessing.TableCell,DocumentFormat.OpenXml.Wordprocessing.InsideHorizontalBorder)" />
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableCellExtraExtensions.InsideVerticalBorder(DocumentFormat.OpenXml.Wordprocessing.TableCell,DocumentFormat.OpenXml.Wordprocessing.InsideVerticalBorder)">
            <summary>
            Sets the inside-vertical border of the cell.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableCellExtraExtensions.InsideVerticalBorder(DocumentFormat.OpenXml.Wordprocessing.TableCell,System.Double,DocumentFormat.OpenXml.Wordprocessing.BorderValues,System.String,System.UInt32)">
            <inheritdoc cref="M:QuickWord.OpenXml.Extras.TableCellExtraExtensions.InsideVerticalBorder(DocumentFormat.OpenXml.Wordprocessing.TableCell,DocumentFormat.OpenXml.Wordprocessing.InsideVerticalBorder)" />
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableCellExtraExtensions.TopLeftToBottomRightCellBorder(DocumentFormat.OpenXml.Wordprocessing.TableCell,DocumentFormat.OpenXml.Wordprocessing.TopLeftToBottomRightCellBorder)">
            <summary>
            Sets the top-left to bottom-right diagonal border of the cell.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableCellExtraExtensions.TopLeftToBottomRightCellBorder(DocumentFormat.OpenXml.Wordprocessing.TableCell,System.Double,DocumentFormat.OpenXml.Wordprocessing.BorderValues,System.String,System.UInt32)">
            <inheritdoc cref="M:QuickWord.OpenXml.Extras.TableCellExtraExtensions.TopLeftToBottomRightCellBorder(DocumentFormat.OpenXml.Wordprocessing.TableCell,DocumentFormat.OpenXml.Wordprocessing.TopLeftToBottomRightCellBorder)" />
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableCellExtraExtensions.TopRightToBottomLeftCellBorder(DocumentFormat.OpenXml.Wordprocessing.TableCell,DocumentFormat.OpenXml.Wordprocessing.TopRightToBottomLeftCellBorder)">
            <summary>
            Sets the top-right to bottom-left diagonal border of the cell.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableCellExtraExtensions.TopRightToBottomLeftCellBorder(DocumentFormat.OpenXml.Wordprocessing.TableCell,System.Double,DocumentFormat.OpenXml.Wordprocessing.BorderValues,System.String,System.UInt32)">
            <inheritdoc cref="M:QuickWord.OpenXml.Extras.TableCellExtraExtensions.TopRightToBottomLeftCellBorder(DocumentFormat.OpenXml.Wordprocessing.TableCell,DocumentFormat.OpenXml.Wordprocessing.TopRightToBottomLeftCellBorder)" />
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableCellExtraExtensions.StartBorder(DocumentFormat.OpenXml.Wordprocessing.TableCell,DocumentFormat.OpenXml.Wordprocessing.StartBorder)">
            <summary>
            Sets the start border of the cell.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableCellExtraExtensions.StartBorder(DocumentFormat.OpenXml.Wordprocessing.TableCell,System.Double,DocumentFormat.OpenXml.Wordprocessing.BorderValues,System.String,System.UInt32)">
            <inheritdoc cref="M:QuickWord.OpenXml.Extras.TableCellExtraExtensions.StartBorder(DocumentFormat.OpenXml.Wordprocessing.TableCell,DocumentFormat.OpenXml.Wordprocessing.StartBorder)" />
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableCellExtraExtensions.EndBorder(DocumentFormat.OpenXml.Wordprocessing.TableCell,DocumentFormat.OpenXml.Wordprocessing.EndBorder)">
            <summary>
            Sets the end border of the cell.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableCellExtraExtensions.EndBorder(DocumentFormat.OpenXml.Wordprocessing.TableCell,System.Double,DocumentFormat.OpenXml.Wordprocessing.BorderValues,System.String,System.UInt32)">
            <inheritdoc cref="M:QuickWord.OpenXml.Extras.TableCellExtraExtensions.EndBorder(DocumentFormat.OpenXml.Wordprocessing.TableCell,DocumentFormat.OpenXml.Wordprocessing.EndBorder)" />
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableCellExtraExtensions.LeftMarginValue(DocumentFormat.OpenXml.Wordprocessing.TableCell,System.Nullable{QuickWord.OpenXml.WidthUnits}@)">
            <summary>
            Gets the left margin size of the cell and the units of the result (e.g. 12pt or 66.6%).
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableCellExtraExtensions.TopMarginValue(DocumentFormat.OpenXml.Wordprocessing.TableCell,System.Nullable{QuickWord.OpenXml.WidthUnits}@)">
            <summary>
            Gets the top margin size of the cell and the units of the result (e.g. 12pt or 66.6%).
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableCellExtraExtensions.RightMarginValue(DocumentFormat.OpenXml.Wordprocessing.TableCell,System.Nullable{QuickWord.OpenXml.WidthUnits}@)">
            <summary>
            Gets the right margin size of the cell and the units of the result (e.g. 12pt or 66.6%).
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableCellExtraExtensions.BottomMargin(DocumentFormat.OpenXml.Wordprocessing.TableCell,System.Nullable{QuickWord.OpenXml.WidthUnits}@)">
            <summary>
            Gets the bottom margin size of the cell and the units of the result (e.g. 12pt or 66.6%).
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableCellExtraExtensions.StartMarginValue(DocumentFormat.OpenXml.Wordprocessing.TableCell,System.Nullable{QuickWord.OpenXml.WidthUnits}@)">
            <summary>
            Gets the start margin size of the cell and the units of the result (e.g. 12pt or 66.6%).
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableCellExtraExtensions.EndMarginValue(DocumentFormat.OpenXml.Wordprocessing.TableCell,System.Nullable{QuickWord.OpenXml.WidthUnits}@)">
            <summary>
            Gets the end margin size of the cell and the units of the result (e.g. 12pt or 66.6%).
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableCellExtraExtensions.LeftMargin(DocumentFormat.OpenXml.Wordprocessing.TableCell,DocumentFormat.OpenXml.Wordprocessing.LeftMargin)">
            <summary>
            Sets the left margin of the cell.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableCellExtraExtensions.LeftMargin(DocumentFormat.OpenXml.Wordprocessing.TableCell,System.Double,System.Nullable{QuickWord.OpenXml.WidthUnits})">
            <summary>
            Sets the left margin of the cell in the given units.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableCellExtraExtensions.TopMargin(DocumentFormat.OpenXml.Wordprocessing.TableCell,DocumentFormat.OpenXml.Wordprocessing.TopMargin)">
            <summary>
            Sets the top margin of the cell.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableCellExtraExtensions.TopMargin(DocumentFormat.OpenXml.Wordprocessing.TableCell,System.Double,System.Nullable{QuickWord.OpenXml.WidthUnits})">
            <summary>
            Sets the top margin of the cell in the given units.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableCellExtraExtensions.RightMargin(DocumentFormat.OpenXml.Wordprocessing.TableCell,DocumentFormat.OpenXml.Wordprocessing.RightMargin)">
            <summary>
            Sets the right margin of the cell.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableCellExtraExtensions.RightMargin(DocumentFormat.OpenXml.Wordprocessing.TableCell,System.Double,System.Nullable{QuickWord.OpenXml.WidthUnits})">
            <summary>
            Sets the right margin of the cell in the given units.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableCellExtraExtensions.BottomMargin(DocumentFormat.OpenXml.Wordprocessing.TableCell,DocumentFormat.OpenXml.Wordprocessing.BottomMargin)">
            <summary>
            Sets the bottom margin of the cell.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableCellExtraExtensions.BottomMargin(DocumentFormat.OpenXml.Wordprocessing.TableCell,System.Double,System.Nullable{QuickWord.OpenXml.WidthUnits})">
            <summary>
            Sets the bottom margin of the cell in the given units.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableCellExtraExtensions.StartMargin(DocumentFormat.OpenXml.Wordprocessing.TableCell,DocumentFormat.OpenXml.Wordprocessing.StartMargin)">
            <summary>
            Sets the start margin of the cell.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableCellExtraExtensions.StartMargin(DocumentFormat.OpenXml.Wordprocessing.TableCell,System.Double,System.Nullable{QuickWord.OpenXml.WidthUnits})">
            <summary>
            Sets the start margin of the cell in the given units.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableCellExtraExtensions.EndMargin(DocumentFormat.OpenXml.Wordprocessing.TableCell,DocumentFormat.OpenXml.Wordprocessing.EndMargin)">
            <summary>
            Sets the end margin of the cell.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableCellExtraExtensions.EndMargin(DocumentFormat.OpenXml.Wordprocessing.TableCell,System.Double,System.Nullable{QuickWord.OpenXml.WidthUnits})">
            <summary>
            Sets the end margin of the cell in the given units.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableCellExtraExtensions.WidthValue(DocumentFormat.OpenXml.Wordprocessing.TableCell,System.Nullable{QuickWord.OpenXml.WidthUnits}@)">
            <summary>
            Gets the width of the cell and the units of the result (e.g. 12pt or 66.6%).
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableCellExtraExtensions.Width(DocumentFormat.OpenXml.Wordprocessing.TableCell,System.Double,System.Nullable{QuickWord.OpenXml.WidthUnits})">
            <summary>
            Sets the width of the cell in the given units.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableCellExtraExtensions.FillColor(DocumentFormat.OpenXml.Wordprocessing.TableCell,System.String)">
            <summary>
            Sets the background fill color of the cell.
            <para><c>Fill</c> property of <see cref="T:DocumentFormat.OpenXml.Wordprocessing.Shading" />.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.Shading" /></para>
            </summary>
        </member>
        <member name="T:QuickWord.OpenXml.Extras.TableExtraExtensions">
            <summary>
            Additional extension methods for the <see cref="T:DocumentFormat.OpenXml.Wordprocessing.Table"/> class.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableExtraExtensions.CloneFormatting(DocumentFormat.OpenXml.Wordprocessing.Table)">
            <summary>
            Clones all formatting properties from the table.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableExtraExtensions.ApplyFormatting(DocumentFormat.OpenXml.Wordprocessing.Table,QuickWord.OpenXml.Extras.TableFormatting,System.Boolean)">
            <summary>
            Applies the given formatting properties to the table (replaces every possible property of the table unless <c>ignoreNulls</c> is set to true).
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableExtraExtensions.ResetFormatting(DocumentFormat.OpenXml.Wordprocessing.Table)">
            <summary>
            Resets every possible property of the table.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableExtraExtensions.Borders(DocumentFormat.OpenXml.Wordprocessing.Table,System.Double,DocumentFormat.OpenXml.Wordprocessing.BorderValues,System.String,System.UInt32)">
            <summary>
            Sets the borders of the table.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableExtraExtensions.LeftBorder(DocumentFormat.OpenXml.Wordprocessing.Table,DocumentFormat.OpenXml.Wordprocessing.LeftBorder)">
            <summary>
            Sets the left border of the table.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableExtraExtensions.LeftBorder(DocumentFormat.OpenXml.Wordprocessing.Table,System.Double,DocumentFormat.OpenXml.Wordprocessing.BorderValues,System.String,System.UInt32)">
            <inheritdoc cref="M:QuickWord.OpenXml.Extras.TableExtraExtensions.LeftBorder(DocumentFormat.OpenXml.Wordprocessing.Table,DocumentFormat.OpenXml.Wordprocessing.LeftBorder)" />
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableExtraExtensions.TopBorder(DocumentFormat.OpenXml.Wordprocessing.Table,DocumentFormat.OpenXml.Wordprocessing.TopBorder)">
            <summary>
            Sets the top border of the table.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableExtraExtensions.TopBorder(DocumentFormat.OpenXml.Wordprocessing.Table,System.Double,DocumentFormat.OpenXml.Wordprocessing.BorderValues,System.String,System.UInt32)">
            <inheritdoc cref="M:QuickWord.OpenXml.Extras.TableExtraExtensions.TopBorder(DocumentFormat.OpenXml.Wordprocessing.Table,DocumentFormat.OpenXml.Wordprocessing.TopBorder)" />
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableExtraExtensions.RightBorder(DocumentFormat.OpenXml.Wordprocessing.Table,DocumentFormat.OpenXml.Wordprocessing.RightBorder)">
            <summary>
            Sets the right border of the table.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableExtraExtensions.RightBorder(DocumentFormat.OpenXml.Wordprocessing.Table,System.Double,DocumentFormat.OpenXml.Wordprocessing.BorderValues,System.String,System.UInt32)">
            <inheritdoc cref="M:QuickWord.OpenXml.Extras.TableExtraExtensions.RightBorder(DocumentFormat.OpenXml.Wordprocessing.Table,DocumentFormat.OpenXml.Wordprocessing.RightBorder)" />
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableExtraExtensions.BottomBorder(DocumentFormat.OpenXml.Wordprocessing.Table,DocumentFormat.OpenXml.Wordprocessing.BottomBorder)">
            <summary>
            Sets the bottom border of the table.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableExtraExtensions.BottomBorder(DocumentFormat.OpenXml.Wordprocessing.Table,System.Double,DocumentFormat.OpenXml.Wordprocessing.BorderValues,System.String,System.UInt32)">
            <inheritdoc cref="M:QuickWord.OpenXml.Extras.TableExtraExtensions.BottomBorder(DocumentFormat.OpenXml.Wordprocessing.Table,DocumentFormat.OpenXml.Wordprocessing.BottomBorder)" />
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableExtraExtensions.InsideHorizontalBorder(DocumentFormat.OpenXml.Wordprocessing.Table,DocumentFormat.OpenXml.Wordprocessing.InsideHorizontalBorder)">
            <summary>
            Sets the inside-horizontal border of the table.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableExtraExtensions.InsideHorizontalBorder(DocumentFormat.OpenXml.Wordprocessing.Table,System.Double,DocumentFormat.OpenXml.Wordprocessing.BorderValues,System.String,System.UInt32)">
            <inheritdoc cref="M:QuickWord.OpenXml.Extras.TableExtraExtensions.InsideHorizontalBorder(DocumentFormat.OpenXml.Wordprocessing.Table,DocumentFormat.OpenXml.Wordprocessing.InsideHorizontalBorder)" />
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableExtraExtensions.InsideVerticalBorder(DocumentFormat.OpenXml.Wordprocessing.Table,DocumentFormat.OpenXml.Wordprocessing.InsideVerticalBorder)">
            <summary>
            Sets the inside-vertical border of the table.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableExtraExtensions.InsideVerticalBorder(DocumentFormat.OpenXml.Wordprocessing.Table,System.Double,DocumentFormat.OpenXml.Wordprocessing.BorderValues,System.String,System.UInt32)">
            <inheritdoc cref="M:QuickWord.OpenXml.Extras.TableExtraExtensions.InsideVerticalBorder(DocumentFormat.OpenXml.Wordprocessing.Table,DocumentFormat.OpenXml.Wordprocessing.InsideVerticalBorder)" />
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableExtraExtensions.StartBorder(DocumentFormat.OpenXml.Wordprocessing.Table,DocumentFormat.OpenXml.Wordprocessing.StartBorder)">
            <summary>
            Sets the start border of the table.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableExtraExtensions.StartBorder(DocumentFormat.OpenXml.Wordprocessing.Table,System.Double,DocumentFormat.OpenXml.Wordprocessing.BorderValues,System.String,System.UInt32)">
            <inheritdoc cref="M:QuickWord.OpenXml.Extras.TableExtraExtensions.StartBorder(DocumentFormat.OpenXml.Wordprocessing.Table,DocumentFormat.OpenXml.Wordprocessing.StartBorder)" />
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableExtraExtensions.EndBorder(DocumentFormat.OpenXml.Wordprocessing.Table,DocumentFormat.OpenXml.Wordprocessing.EndBorder)">
            <summary>
            Sets the end border of the table.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableExtraExtensions.EndBorder(DocumentFormat.OpenXml.Wordprocessing.Table,System.Double,DocumentFormat.OpenXml.Wordprocessing.BorderValues,System.String,System.UInt32)">
            <inheritdoc cref="M:QuickWord.OpenXml.Extras.TableExtraExtensions.EndBorder(DocumentFormat.OpenXml.Wordprocessing.Table,DocumentFormat.OpenXml.Wordprocessing.EndBorder)" />
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableExtraExtensions.DefaultLeftMarginOfCellsValue(DocumentFormat.OpenXml.Wordprocessing.Table)">
            <summary>
            Gets the default left margin of the table's cells (in points).
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableExtraExtensions.DefaultTopMarginOfCellsValue(DocumentFormat.OpenXml.Wordprocessing.Table,System.Nullable{QuickWord.OpenXml.WidthUnits}@)">
            <summary>
            Gets the default top margin of the table's cells and the units of the result (e.g. 12pt or 66.6%).
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableExtraExtensions.DefaultRightMarginOfCellsValue(DocumentFormat.OpenXml.Wordprocessing.Table)">
            <summary>
            Gets the default right margin of the table's cells (in points).
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableExtraExtensions.DefaultBottomMarginOfCellsValue(DocumentFormat.OpenXml.Wordprocessing.Table,System.Nullable{QuickWord.OpenXml.WidthUnits}@)">
            <summary>
            Gets the default bottom margin of the table's cells and the units of the result (e.g. 12pt or 66.6%).
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableExtraExtensions.DefaultStartMarginOfCellsValue(DocumentFormat.OpenXml.Wordprocessing.Table,System.Nullable{QuickWord.OpenXml.WidthUnits}@)">
            <summary>
            Gets the default start margin of the table's cells and the units of the result (e.g. 12pt or 66.6%).
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableExtraExtensions.DefaultEndMarginOfCellsValue(DocumentFormat.OpenXml.Wordprocessing.Table,System.Nullable{QuickWord.OpenXml.WidthUnits}@)">
            <summary>
            Gets the default end margin of the table's cells and the units of the result (e.g. 12pt or 66.6%).
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableExtraExtensions.DefaultLeftMarginOfCells(DocumentFormat.OpenXml.Wordprocessing.Table,DocumentFormat.OpenXml.Wordprocessing.TableCellLeftMargin)">
            <summary>
            Sets the default left margin of the table's cells.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableExtraExtensions.DefaultLeftMarginOfCells(DocumentFormat.OpenXml.Wordprocessing.Table,System.Double)">
            <summary>
            Sets the default left margin of the table's cells (in points).
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableExtraExtensions.DefaultTopMarginOfCells(DocumentFormat.OpenXml.Wordprocessing.Table,DocumentFormat.OpenXml.Wordprocessing.TopMargin)">
            <summary>
            Sets the default top margin of the table's cells.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableExtraExtensions.DefaultTopMarginOfCells(DocumentFormat.OpenXml.Wordprocessing.Table,System.Double,System.Nullable{QuickWord.OpenXml.WidthUnits})">
            <summary>
            Sets the default top margin of the table's cells in the given units.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableExtraExtensions.DefaultRightMarginOfCells(DocumentFormat.OpenXml.Wordprocessing.Table,DocumentFormat.OpenXml.Wordprocessing.TableCellRightMargin)">
            <summary>
            Sets the default right margin of the table's cells.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableExtraExtensions.DefaultRightMarginOfCells(DocumentFormat.OpenXml.Wordprocessing.Table,System.Double)">
            <summary>
            Sets the default right margin of the table's cells (in points).
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableExtraExtensions.DefaultBottomMarginOfCells(DocumentFormat.OpenXml.Wordprocessing.Table,DocumentFormat.OpenXml.Wordprocessing.BottomMargin)">
            <summary>
            Sets the default bottom margin of the table's cells.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableExtraExtensions.DefaultBottomMarginOfCells(DocumentFormat.OpenXml.Wordprocessing.Table,System.Double,System.Nullable{QuickWord.OpenXml.WidthUnits})">
            <summary>
            Sets the default bottom margin of the table's cells in the given units.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableExtraExtensions.DefaultStartMarginOfCells(DocumentFormat.OpenXml.Wordprocessing.Table,DocumentFormat.OpenXml.Wordprocessing.StartMargin)">
            <summary>
            Sets the default start margin of the table's cells.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableExtraExtensions.DefaultStartMarginOfCells(DocumentFormat.OpenXml.Wordprocessing.Table,System.Double,System.Nullable{QuickWord.OpenXml.WidthUnits})">
            <summary>
            Sets the default start margin of the table's cells in the given units.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableExtraExtensions.DefaultEndMarginOfCells(DocumentFormat.OpenXml.Wordprocessing.Table,DocumentFormat.OpenXml.Wordprocessing.EndMargin)">
            <summary>
            Sets the default end margin of the table's cells.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableExtraExtensions.DefaultEndMarginOfCells(DocumentFormat.OpenXml.Wordprocessing.Table,System.Double,System.Nullable{QuickWord.OpenXml.WidthUnits})">
            <summary>
            Sets the default end margin of the table's cells in the given units.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableExtraExtensions.CellSpacingValue(DocumentFormat.OpenXml.Wordprocessing.Table,System.Nullable{QuickWord.OpenXml.WidthUnits}@)">
            <summary>
            Gets the cell spacing of the table and the units of the result (e.g. 12pt or 66.6%).
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableExtraExtensions.IndentationValue(DocumentFormat.OpenXml.Wordprocessing.Table,System.Nullable{QuickWord.OpenXml.WidthUnits}@)">
            <summary>
            Gets the indentation of the table and the units of the result (e.g. 12pt or 66.6%).
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableExtraExtensions.WidthValue(DocumentFormat.OpenXml.Wordprocessing.Table,System.Nullable{QuickWord.OpenXml.WidthUnits}@)">
            <summary>
            Gets the width of the table and the units of the result (e.g. 12pt or 66.6%).
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableExtraExtensions.CellSpacing(DocumentFormat.OpenXml.Wordprocessing.Table,System.Double,System.Nullable{QuickWord.OpenXml.WidthUnits})">
            <summary>
            Sets the cell spacing of the table in the given units.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableExtraExtensions.Indentation(DocumentFormat.OpenXml.Wordprocessing.Table,System.Double,System.Nullable{QuickWord.OpenXml.WidthUnits})">
            <summary>
            Sets the indentation of the table in the given units.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableExtraExtensions.Width(DocumentFormat.OpenXml.Wordprocessing.Table,System.Double,System.Nullable{QuickWord.OpenXml.WidthUnits})">
            <summary>
            Sets the width of the table in the given units.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableExtraExtensions.FillColor(DocumentFormat.OpenXml.Wordprocessing.Table,System.String)">
            <summary>
            Sets the background fill color of the table.
            <para><c>Fill</c> property of <see cref="T:DocumentFormat.OpenXml.Wordprocessing.Shading" />.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.Shading" /></para>
            </summary>
        </member>
        <member name="T:QuickWord.OpenXml.Extras.TableIndentationExtensions">
            <summary>
            A set of extension methods for the <see cref="T:DocumentFormat.OpenXml.Wordprocessing.TableIndentation"/> class.
            </summary>
        </member>
        <member name="T:QuickWord.OpenXml.Extras.TableRowExtraExtensions">
            <summary>
            Additional extension methods for the <see cref="T:DocumentFormat.OpenXml.Wordprocessing.TableRow"/> class.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableRowExtraExtensions.CloneFormatting(DocumentFormat.OpenXml.Wordprocessing.TableRow)">
            <summary>
            Clones all formatting properties from the table row.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableRowExtraExtensions.ApplyFormatting(DocumentFormat.OpenXml.Wordprocessing.TableRow,QuickWord.OpenXml.Extras.TableRowFormatting,System.Boolean)">
            <summary>
            Applies the given formatting properties to the table row (replaces every possible property of the table row unless <c>ignoreNulls</c> is set to true).
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableRowExtraExtensions.ResetFormatting(DocumentFormat.OpenXml.Wordprocessing.TableRow)">
            <summary>
            Resets every possible property of the table row.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableRowExtraExtensions.WidthBeforeValue(DocumentFormat.OpenXml.Wordprocessing.TableRow,System.Nullable{QuickWord.OpenXml.WidthUnits}@)">
            <summary>
            Gets the preferred width for the total number of grid columns before this table row and the units of the result (e.g. 12pt or 66.6%).
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.WidthBeforeTableRow" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableRowExtraExtensions.WidthAfterValue(DocumentFormat.OpenXml.Wordprocessing.TableRow,System.Nullable{QuickWord.OpenXml.WidthUnits}@)">
            <summary>
            Gets the preferred width for the total number of grid columns after this table row and the units of the result (e.g. 12pt or 66.6%).
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.WidthAfterTableRow" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableRowExtraExtensions.HeightValue(DocumentFormat.OpenXml.Wordprocessing.TableRow,QuickWord.OpenXml.MeasuringUnits,System.Nullable{DocumentFormat.OpenXml.Wordprocessing.HeightRuleValues}@)">
            <summary>
            Gets the height of the row in the desired units and the rule that is applied to the height.
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.TableRowHeight" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableRowExtraExtensions.WidthBefore(DocumentFormat.OpenXml.Wordprocessing.TableRow,System.Double,QuickWord.OpenXml.WidthUnits)">
            <summary>
            Sets the preferred width for the total number of grid columns before this table row in the given units.
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.WidthBeforeTableRow" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableRowExtraExtensions.WidthAfter(DocumentFormat.OpenXml.Wordprocessing.TableRow,System.Double,QuickWord.OpenXml.WidthUnits)">
            <summary>
            Sets the preferred width for the total number of grid columns after this table row in the given units.
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.WidthAfterTableRow" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Extras.TableRowExtraExtensions.Height(DocumentFormat.OpenXml.Wordprocessing.TableRow,System.Double,QuickWord.OpenXml.MeasuringUnits,DocumentFormat.OpenXml.Wordprocessing.HeightRuleValues)">
            <summary>
            Sets the height of the row in the given units and the given rule.
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.TableRowHeight" /></para>
            </summary>
        </member>
        <member name="T:QuickWord.OpenXml.Extras.TableWidthTypeExtensions">
            <summary>
            A set of extension methods for the <see cref="T:DocumentFormat.OpenXml.Wordprocessing.TableWidthType"/> class.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Measurements.BorderSize.ToSixth(System.Double)">
            <summary>
            <c>1px => 6</c>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Measurements.BorderSize.FromSixth(System.UInt32)">
            <summary>
            <c>6 => 1px</c>
            </summary>
        </member>
        <member name="T:QuickWord.OpenXml.Measurements.Twips">
            <summary>
            Twentieth of a point (0.05pt).
            </summary>
        </member>
        <member name="F:QuickWord.OpenXml.ImageMeasuringUnits.Inches">
            <summary>
            96 pixels.
            </summary>
        </member>
        <member name="F:QuickWord.OpenXml.ImageMeasuringUnits.Centimeters">
            <summary>
            ~37.8 pixels.
            </summary>
        </member>
        <member name="F:QuickWord.OpenXml.IndentationUnits.Twips">
            <summary>
            Twentieth of a point (0.05pt).
            </summary>
        </member>
        <member name="F:QuickWord.OpenXml.IndentationUnits.Points">
            <summary>
            Whole points.
            </summary>
        </member>
        <member name="F:QuickWord.OpenXml.IndentationUnits.Inches">
            <summary>
            72 points.
            </summary>
        </member>
        <member name="F:QuickWord.OpenXml.IndentationUnits.Centimeters">
            <summary>
            28.35 points.
            </summary>
        </member>
        <member name="F:QuickWord.OpenXml.LineMeasuringUnits.Twips">
            <summary>
            Twentieth of a point (0.05pt).
            </summary>
        </member>
        <member name="F:QuickWord.OpenXml.LineMeasuringUnits.Points">
            <summary>
            Whole points.
            </summary>
        </member>
        <member name="F:QuickWord.OpenXml.LineMeasuringUnits.WholeLines">
            <summary>
            12 points (240 twips).
            </summary>
        </member>
        <member name="F:QuickWord.OpenXml.MeasuringUnits.Twips">
            <summary>
            Twentieth of a point (0.05pt).
            </summary>
        </member>
        <member name="F:QuickWord.OpenXml.MeasuringUnits.Points">
            <summary>
            Whole points.
            </summary>
        </member>
        <member name="F:QuickWord.OpenXml.MeasuringUnits.Inches">
            <summary>
            72 points.
            </summary>
        </member>
        <member name="F:QuickWord.OpenXml.MeasuringUnits.Centimeters">
            <summary>
            28.35 points.
            </summary>
        </member>
        <member name="T:QuickWord.OpenXml.OutlineLevelValues">
            <summary>
            Outline level values for headings.
            </summary>
        </member>
        <member name="T:QuickWord.OpenXml.ParagraphExtensions">
            <summary>
            A set of extension methods for the <see cref="T:DocumentFormat.OpenXml.Wordprocessing.Paragraph" /> class.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.ParagraphExtensions.AdjustRightIndentValue(DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Specifies whether the right indent shall be automatically adjusted for the given paragraph when
            a document grid has been defined for the current section using the docGrid element (§17.6.5),
            modifying of the current right indent used on this paragraph.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.AdjustRightIndent" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.ParagraphExtensions.AutoSpaceDEValue(DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Specifies whether inter-character spacing shall automatically be adjusted between
            regions of Latin text and regions of East Asian text in the current paragraph.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.AutoSpaceDE" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.ParagraphExtensions.AutoSpaceDNValue(DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Specifies whether inter-character spacing shall automatically be adjusted between
            regions of numbers and regions of East Asian text in the current paragraph.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.AutoSpaceDN" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.ParagraphExtensions.BiDirectionalValue(DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Specifies that this paragraph shall be displayed from right to left.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.BiDi" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.ParagraphExtensions.GetConditionalFormatStyle(DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Specifies the set of conditional table style formatting properties which
            have been applied to this paragraph, if this paragraph is contained within a table cell.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.ConditionalFormatStyle" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.ParagraphExtensions.ContextualSpacingValue(DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Specifies that any space specified before or after this paragraph, specified using
            the spacing element (§17.3.1.33), should not be applied when
            the preceding and following paragraphs are of the same paragraph style,
            affecting the top and bottom spacing respectively.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.ContextualSpacing" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.ParagraphExtensions.DivIdValue(DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Specifies that this paragraph should be located within the specified
            HTML <i>div</i> tag when this document is saved in HTML format.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.DivId" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.ParagraphExtensions.GetFrameProperties(DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Specifies information about the current paragraph with regard to text frames.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.FrameProperties" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.ParagraphExtensions.GetIndentation(DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Specifies the set of indentation properties applied to the current paragraph.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.Indentation" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.ParagraphExtensions.JustificationValue(DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Specifies the paragraph alignment which shall be applied to text in this paragraph.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.Justification" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.ParagraphExtensions.KeepLinesTogetherValue(DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Specifies that when rendering this document in a page view, all lines
            of this paragraph are maintained on a single page whenever possible.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.KeepLines" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.ParagraphExtensions.KeepWithNextValue(DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Specifies that when rendering this document in a paginated view, the contents
            of this paragraph are at least partly rendered on the same page as
            the following paragraph whenever possible.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.KeepNext" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.ParagraphExtensions.KinsokuValue(DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Specifies whether East Asian typography and line-breaking rules shall be applied
            to text in this paragraph to determine which characters can begin and end each line.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.Kinsoku" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.ParagraphExtensions.MirrorIndentsValue(DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Specifies whether the paragraph indents should be interpreted as mirrored indents.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.MirrorIndents" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.ParagraphExtensions.GetNumberingProperties(DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Specifies that the current paragraph references a numbering definition instance in the current document.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.NumberingProperties" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.ParagraphExtensions.OutlineLevelValue(DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Specifies the outline level which shall be associated with the current paragraph in the document.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.OutlineLevel" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.ParagraphExtensions.OverflowPunctuationValue(DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Specifies that the text in this paragraph shall be allowed to extend one character
            beyond the extents applied by any indents/margins when the character that extends
            past those extents is a punctuation character.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.OverflowPunctuation" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.ParagraphExtensions.PageBreakBeforeValue(DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Specifies that when rendering this document in a paginated view, the contents
            of this paragraph are rendered on the start of a new page in the document.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.PageBreakBefore" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.ParagraphExtensions.GetBorders(DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Specifies the borders for the paragraph.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.ParagraphBorders" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.ParagraphExtensions.StyleValue(DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Specifies the style ID of the paragraph style which shall be used to format the contents of this paragraph.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.ParagraphStyleId" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.ParagraphExtensions.GetMarkRunProperties(DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Specifies the set of run properties applied to the glyph used
            to represent the physical location of the paragraph mark for this paragraph.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.ParagraphMarkRunProperties" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.ParagraphExtensions.GetSectionProperties(DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Specifies the section properties for the final section of the document.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.SectionProperties" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.ParagraphExtensions.GetShading(DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Specifies the shading applied to the contents of the paragraph.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.Shading" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.ParagraphExtensions.SnapToGridValue(DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Specifies whether the current paragraph should use the document grid lines per page settings defined
            in the docGrid element (§17.6.5) when laying out the contents in the paragraph.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.SnapToGrid" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.ParagraphExtensions.GetSpacing(DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Specifies the inter-line and inter-paragraph spacing which shall be applied
            to the contents of this paragraph when it is displayed by a consumer.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.SpacingBetweenLines" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.ParagraphExtensions.SuppressAutoHyphenationValue(DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Specifies whether any hyphenation shall be performed on this paragraph by the consumer when
            requested using the autoHyphenation element (§17.15.1.10) in the document's settings.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.SuppressAutoHyphens" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.ParagraphExtensions.SuppressLineNumbersValue(DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Specifies whether line numbers shall be calculated for lines in this paragraph by the consumer when
            line numbering is requested using the lnNumType element (§17.6.8) in the paragraph's
            parent section settings.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.SuppressLineNumbers" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.ParagraphExtensions.SuppressOverlappingValue(DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Specifies whether a text frame which intersects another text frame at display time shall
            be allowed to overlap the contents of the other text frame.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.SuppressOverlap" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.ParagraphExtensions.GetTabs(DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Specifies a sequence of custom tab stops which shall be used for
            any tab characters in the current paragraph.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.Tabs" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.ParagraphExtensions.VerticalTextAlignmentValue(DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Specifies the vertical alignment of all text on each line displayed within the paragraph.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.TextAlignment" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.ParagraphExtensions.TextBoxTightWrapValue(DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.TextBoxTightWrap" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.ParagraphExtensions.TextDirectionValue(DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Specifies the direction of the text flow for this paragraph.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.TextDirection" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.ParagraphExtensions.TopLinePunctuationValue(DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Specifies whether punctuation shall be compressed when it appears as the first
            character in a line, allowing subsequent characters on the line to be move in accordingly.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.TopLinePunctuation" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.ParagraphExtensions.WidowControlValue(DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Specifies whether a consumer shall prevent a single line of this paragraph from
            being displayed on a separate page from the remaining content at display time by moving
            the line onto the following page.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.WidowControl" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.ParagraphExtensions.WordWrapValue(DocumentFormat.OpenXml.Wordprocessing.Paragraph)">
            <summary>
            Specifies whether a consumer shall break text which exceeds the text extents of
            a line by breaking the word across two lines (breaking on the character level) or by
            moving the word to the following line (breaking on the word level).
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.WordWrap" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.ParagraphExtensions.AdjustRightIndent(DocumentFormat.OpenXml.Wordprocessing.Paragraph,System.Nullable{System.Boolean})">
            <summary>
            Specifies whether the right indent shall be automatically adjusted for the given paragraph when
            a document grid has been defined for the current section using the docGrid element (§17.6.5),
            modifying of the current right indent used on this paragraph.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.AdjustRightIndent" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.ParagraphExtensions.AutoSpaceDE(DocumentFormat.OpenXml.Wordprocessing.Paragraph,System.Nullable{System.Boolean})">
            <summary>
            Specifies whether inter-character spacing shall automatically be adjusted between
            regions of Latin text and regions of East Asian text in the current paragraph.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.AutoSpaceDE" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.ParagraphExtensions.AutoSpaceDN(DocumentFormat.OpenXml.Wordprocessing.Paragraph,System.Nullable{System.Boolean})">
            <summary>
            Specifies whether inter-character spacing shall automatically be adjusted between
            regions of numbers and regions of East Asian text in the current paragraph.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.AutoSpaceDN" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.ParagraphExtensions.BiDirectional(DocumentFormat.OpenXml.Wordprocessing.Paragraph,System.Nullable{System.Boolean})">
            <summary>
            Specifies that this paragraph shall be displayed from right to left.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.BiDi" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.ParagraphExtensions.ConditionalFormatStyle(DocumentFormat.OpenXml.Wordprocessing.Paragraph,DocumentFormat.OpenXml.Wordprocessing.ConditionalFormatStyle)">
            <summary>
            Specifies the set of conditional table style formatting properties which
            have been applied to this paragraph, if this paragraph is contained within a table cell.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.ConditionalFormatStyle" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.ParagraphExtensions.ContextualSpacing(DocumentFormat.OpenXml.Wordprocessing.Paragraph,System.Nullable{System.Boolean})">
            <summary>
            Specifies that any space specified before or after this paragraph, specified using
            the spacing element (§17.3.1.33), should not be applied when
            the preceding and following paragraphs are of the same paragraph style,
            affecting the top and bottom spacing respectively.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.ContextualSpacing" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.ParagraphExtensions.DivId(DocumentFormat.OpenXml.Wordprocessing.Paragraph,System.String)">
            <summary>
            Specifies that this paragraph should be located within the specified
            HTML <i>div</i> tag when this document is saved in HTML format.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.DivId" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.ParagraphExtensions.FrameProperties(DocumentFormat.OpenXml.Wordprocessing.Paragraph,DocumentFormat.OpenXml.Wordprocessing.FrameProperties)">
            <summary>
            Specifies information about the current paragraph with regard to text frames.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.FrameProperties" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.ParagraphExtensions.Indentation(DocumentFormat.OpenXml.Wordprocessing.Paragraph,DocumentFormat.OpenXml.Wordprocessing.Indentation)">
            <summary>
            Specifies the set of indentation properties applied to the current paragraph.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.Indentation" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.ParagraphExtensions.Justification(DocumentFormat.OpenXml.Wordprocessing.Paragraph,System.Nullable{DocumentFormat.OpenXml.Wordprocessing.JustificationValues})">
            <summary>
            Specifies the paragraph alignment which shall be applied to text in this paragraph.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.Justification" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.ParagraphExtensions.KeepLinesTogether(DocumentFormat.OpenXml.Wordprocessing.Paragraph,System.Nullable{System.Boolean})">
            <summary>
            Specifies that when rendering this document in a page view, all lines
            of this paragraph are maintained on a single page whenever possible.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.KeepLines" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.ParagraphExtensions.KeepWithNext(DocumentFormat.OpenXml.Wordprocessing.Paragraph,System.Nullable{System.Boolean})">
            <summary>
            Specifies that when rendering this document in a paginated view, the contents
            of this paragraph are at least partly rendered on the same page as
            the following paragraph whenever possible.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.KeepNext" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.ParagraphExtensions.Kinsoku(DocumentFormat.OpenXml.Wordprocessing.Paragraph,System.Nullable{System.Boolean})">
            <summary>
            Specifies whether East Asian typography and line-breaking rules shall be applied
            to text in this paragraph to determine which characters can begin and end each line.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.Kinsoku" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.ParagraphExtensions.MirrorIndents(DocumentFormat.OpenXml.Wordprocessing.Paragraph,System.Nullable{System.Boolean})">
            <summary>
            Specifies whether the paragraph indents should be interpreted as mirrored indents.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.MirrorIndents" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.ParagraphExtensions.NumberingProperties(DocumentFormat.OpenXml.Wordprocessing.Paragraph,DocumentFormat.OpenXml.Wordprocessing.NumberingProperties)">
            <summary>
            Specifies that the current paragraph references a numbering definition instance in the current document.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.NumberingProperties" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.ParagraphExtensions.OutlineLevel(DocumentFormat.OpenXml.Wordprocessing.Paragraph,System.Nullable{QuickWord.OpenXml.OutlineLevelValues})">
            <summary>
            Specifies the outline level which shall be associated with the current paragraph in the document.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.OutlineLevel" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.ParagraphExtensions.OverflowPunctuation(DocumentFormat.OpenXml.Wordprocessing.Paragraph,System.Nullable{System.Boolean})">
            <summary>
            Specifies that the text in this paragraph shall be allowed to extend one character
            beyond the extents applied by any indents/margins when the character that extends
            past those extents is a punctuation character.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.OverflowPunctuation" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.ParagraphExtensions.PageBreakBefore(DocumentFormat.OpenXml.Wordprocessing.Paragraph,System.Nullable{System.Boolean})">
            <summary>
            Specifies that when rendering this document in a paginated view, the contents
            of this paragraph are rendered on the start of a new page in the document.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.PageBreakBefore" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.ParagraphExtensions.Borders(DocumentFormat.OpenXml.Wordprocessing.Paragraph,DocumentFormat.OpenXml.Wordprocessing.ParagraphBorders)">
            <summary>
            Specifies the borders for the paragraph.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.ParagraphBorders" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.ParagraphExtensions.Style(DocumentFormat.OpenXml.Wordprocessing.Paragraph,System.String)">
            <summary>
            Specifies the style ID of the paragraph style which shall be used to format the contents of this paragraph.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.ParagraphStyleId" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.ParagraphExtensions.MarkRunProperties(DocumentFormat.OpenXml.Wordprocessing.Paragraph,DocumentFormat.OpenXml.Wordprocessing.ParagraphMarkRunProperties)">
            <summary>
            Specifies the set of run properties applied to the glyph used
            to represent the physical location of the paragraph mark for this paragraph.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.ParagraphMarkRunProperties" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.ParagraphExtensions.SectionProperties(DocumentFormat.OpenXml.Wordprocessing.Paragraph,DocumentFormat.OpenXml.Wordprocessing.SectionProperties)">
            <summary>
            Specifies the section properties for the final section of the document.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.SectionProperties" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.ParagraphExtensions.Shading(DocumentFormat.OpenXml.Wordprocessing.Paragraph,DocumentFormat.OpenXml.Wordprocessing.Shading)">
            <summary>
            Specifies the shading applied to the contents of the paragraph.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.Shading" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.ParagraphExtensions.SnapToGrid(DocumentFormat.OpenXml.Wordprocessing.Paragraph,System.Nullable{System.Boolean})">
            <summary>
            Specifies whether the current paragraph should use the document grid lines per page settings defined
            in the docGrid element (§17.6.5) when laying out the contents in the paragraph.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.SnapToGrid" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.ParagraphExtensions.Spacing(DocumentFormat.OpenXml.Wordprocessing.Paragraph,DocumentFormat.OpenXml.Wordprocessing.SpacingBetweenLines)">
            <summary>
            Specifies the inter-line and inter-paragraph spacing which shall be applied
            to the contents of this paragraph when it is displayed by a consumer.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.SpacingBetweenLines" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.ParagraphExtensions.SuppressAutoHyphenation(DocumentFormat.OpenXml.Wordprocessing.Paragraph,System.Nullable{System.Boolean})">
            <summary>
            Specifies whether any hyphenation shall be performed on this paragraph by the consumer when
            requested using the autoHyphenation element (§17.15.1.10) in the document's settings.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.SuppressAutoHyphens" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.ParagraphExtensions.SuppressLineNumbers(DocumentFormat.OpenXml.Wordprocessing.Paragraph,System.Nullable{System.Boolean})">
            <summary>
            Specifies whether line numbers shall be calculated for lines in this paragraph by the consumer when
            line numbering is requested using the lnNumType element (§17.6.8) in the paragraph's
            parent section settings.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.SuppressLineNumbers" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.ParagraphExtensions.SuppressOverlapping(DocumentFormat.OpenXml.Wordprocessing.Paragraph,System.Nullable{System.Boolean})">
            <summary>
            Specifies whether a text frame which intersects another text frame at display time shall
            be allowed to overlap the contents of the other text frame.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.SuppressOverlap" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.ParagraphExtensions.Tabs(DocumentFormat.OpenXml.Wordprocessing.Paragraph,DocumentFormat.OpenXml.Wordprocessing.Tabs)">
            <summary>
            Specifies a sequence of custom tab stops which shall be used for
            any tab characters in the current paragraph.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.Tabs" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.ParagraphExtensions.VerticalTextAlignment(DocumentFormat.OpenXml.Wordprocessing.Paragraph,System.Nullable{DocumentFormat.OpenXml.Wordprocessing.VerticalTextAlignmentValues})">
            <summary>
            Specifies the vertical alignment of all text on each line displayed within the paragraph.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.TextAlignment" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.ParagraphExtensions.TextBoxTightWrap(DocumentFormat.OpenXml.Wordprocessing.Paragraph,System.Nullable{DocumentFormat.OpenXml.Wordprocessing.TextBoxTightWrapValues})">
            <summary>
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.TextBoxTightWrap" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.ParagraphExtensions.TextDirection(DocumentFormat.OpenXml.Wordprocessing.Paragraph,System.Nullable{DocumentFormat.OpenXml.Wordprocessing.TextDirectionValues})">
            <summary>
            Specifies the direction of the text flow for this paragraph.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.TextDirection" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.ParagraphExtensions.TopLinePunctuation(DocumentFormat.OpenXml.Wordprocessing.Paragraph,System.Nullable{System.Boolean})">
            <summary>
            Specifies whether punctuation shall be compressed when it appears as the first
            character in a line, allowing subsequent characters on the line to be move in accordingly.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.TopLinePunctuation" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.ParagraphExtensions.WidowControl(DocumentFormat.OpenXml.Wordprocessing.Paragraph,System.Nullable{System.Boolean})">
            <summary>
            Specifies whether a consumer shall prevent a single line of this paragraph from
            being displayed on a separate page from the remaining content at display time by moving
            the line onto the following page.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.WidowControl" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.ParagraphExtensions.WordWrap(DocumentFormat.OpenXml.Wordprocessing.Paragraph,System.Nullable{System.Boolean})">
            <summary>
            Specifies whether a consumer shall break text which exceeds the text extents of
            a line by breaking the word across two lines (breaking on the character level) or by
            moving the word to the following line (breaking on the word level).
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.WordWrap" /></para>
            </summary>
        </member>
        <member name="T:QuickWord.OpenXml.RunExtensions">
            <summary>
            A set of extension methods for the <see cref="T:DocumentFormat.OpenXml.Wordprocessing.Run" /> class.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.BoldValue(DocumentFormat.OpenXml.Wordprocessing.Run)">
            <summary>
            Specifies whether the bold property shall be applied to all non-complex
            script characters in the contents of this run when displayed in a document.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.Bold" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.BoldComplexScriptValue(DocumentFormat.OpenXml.Wordprocessing.Run)">
            <summary>
            Specifies whether the bold property shall be applied to all complex
            script characters in the contents of this run when displayed in a document.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.BoldComplexScript" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.GetBorder(DocumentFormat.OpenXml.Wordprocessing.Run)">
            <summary>
            Specifies information about the border applied to the text in the current run.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.Border" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.AllCapsValue(DocumentFormat.OpenXml.Wordprocessing.Run)">
            <summary>
            Specifies that any lowercase characters in this text run shall
            be formatted for display only as their capital letter character equivalents.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.Caps" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.GetColor(DocumentFormat.OpenXml.Wordprocessing.Run)">
            <summary>
            Specifies the color which shall be used to display
            the contents of this run in the document.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.Color" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.ComplexScriptValue(DocumentFormat.OpenXml.Wordprocessing.Run)">
            <summary>
            Specifies whether the contents of this run shall be treated
            as complex script text regardless of their Unicode character values when
            determining the formatting for this run.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.ComplexScript" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.DoubleStrikeValue(DocumentFormat.OpenXml.Wordprocessing.Run)">
            <summary>
            Specifies that the contents of this run shall be displayed with
            two horizontal lines through each character displayed on the line.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.DoubleStrike" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.GetEastAsianLayout(DocumentFormat.OpenXml.Wordprocessing.Run)">
            <summary>
            Specifies any East Asian typography settings which shall
            be applied to the contents of the run.
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.EastAsianLayout" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.TextEffectValue(DocumentFormat.OpenXml.Wordprocessing.Run)">
            <summary>
            Specifies an animated text effect which should be displayed when
            rendering the contents of this run.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.TextEffect" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.EmphasisMarkValue(DocumentFormat.OpenXml.Wordprocessing.Run)">
            <summary>
            Specifies the emphasis mark which shall be displayed for each
            non-space character in this run.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.Emphasis" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.EmbossValue(DocumentFormat.OpenXml.Wordprocessing.Run)">
            <summary>
            Specifies that the contents of this run should be displayed as if embossed,
            which makes text appear as if it is raised off the page in relief.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.Emboss" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.GetFitText(DocumentFormat.OpenXml.Wordprocessing.Run)">
            <summary>
            Specifies that the contents of this run shall not be automatically displayed based
            on the width of its contents, rather its contents shall be resized
            to fit the width specified.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.FitText" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.HighlightColorValue(DocumentFormat.OpenXml.Wordprocessing.Run)">
            <summary>
            Specifies a highlighting color which is applied as
            a background behind the contents of this run.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.Highlight" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.ItalicValue(DocumentFormat.OpenXml.Wordprocessing.Run)">
            <summary>
            Specifies whether the italic property should be applied to all non-complex
            script characters in the contents of this run when displayed in a document.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.Italic" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.ItalicComplexScriptValue(DocumentFormat.OpenXml.Wordprocessing.Run)">
            <summary>
            Specifies whether the italic property should be applied to all complex
            script characters in the contents of this run when displayed in a document.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.ItalicComplexScript" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.ImprintValue(DocumentFormat.OpenXml.Wordprocessing.Run)">
            <summary>
            Specifies that the contents of this run should be displayed as if imprinted,
            which makes text appear to be imprinted or pressed into page
            (also referred to as 'engrave').
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.Imprint" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.KerningValue(DocumentFormat.OpenXml.Wordprocessing.Run,QuickWord.OpenXml.TextMeasuringUnits)">
            <summary>
            Specifies whether font kerning shall be applied to the contents of this run.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.Kern" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.GetLanguages(DocumentFormat.OpenXml.Wordprocessing.Run)">
            <summary>
            Specifies the languages which shall be used to check
            spelling and grammar (if requested) when processing the contents of this run.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.Languages" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.NoProofingValue(DocumentFormat.OpenXml.Wordprocessing.Run)">
            <summary>
            Specifies that the contents of this run shall not report
            any errors when the document is scanned for spelling and grammar.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.NoProof" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.OfficeMathValue(DocumentFormat.OpenXml.Wordprocessing.Run)">
            <summary>
            Specifies that this run contains WordprocessingML which shall
            be handled as though it was Office Open XML Math.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.OfficeMath" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.OutlineValue(DocumentFormat.OpenXml.Wordprocessing.Run)">
            <summary>
            Specifies that the contents of this run should be displayed as if they have
            an outline, by drawing a one pixel wide border around the inside and outside
            borders of each character glyph in the run.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.Outline" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.VerticalPositionValue(DocumentFormat.OpenXml.Wordprocessing.Run,QuickWord.OpenXml.TextMeasuringUnits)">
            <summary>
            Specifies the amount by which text shall be raised or lowered for this run in relation
            to the default baseline of the surrounding non-positioned text.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.Position" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.GetFonts(DocumentFormat.OpenXml.Wordprocessing.Run)">
            <summary>
            Specifies the fonts which shall be used to display the text contents of this run.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.RunFonts" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.StyleValue(DocumentFormat.OpenXml.Wordprocessing.Run)">
            <summary>
            Specifies the style ID of the character style which shall be used to
            format the contents of this paragraph.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.RunStyle" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.RightToLeftValue(DocumentFormat.OpenXml.Wordprocessing.Run)">
            <summary>
            Specifies whether the contents of this run shall have right-to-left characteristics.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.RightToLeftText" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.ShadowValue(DocumentFormat.OpenXml.Wordprocessing.Run)">
            <summary>
            Specifies that the contents of this run shall be displayed as if
            each character has a shadow.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.Shadow" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.GetShading(DocumentFormat.OpenXml.Wordprocessing.Run)">
            <summary>
            Specifies the shading applied to the contents of the run.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.Shading" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.SmallCapsValue(DocumentFormat.OpenXml.Wordprocessing.Run)">
            <summary>
            Specifies that all small letter characters in this text run shall be formatted for display only
            as their capital letter character equivalents in a font size two points smaller than the actual
            font size specified for this text.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.SmallCaps" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.SnapToGridValue(DocumentFormat.OpenXml.Wordprocessing.Run)">
            <summary>
            Specifies whether the current paragraph should use the document grid lines per
            page settings defined in the docGrid element (§17.6.5) when laying out
            the contents in the paragraph.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.SnapToGrid" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.CharacterSpacingValue(DocumentFormat.OpenXml.Wordprocessing.Run,QuickWord.OpenXml.MeasuringUnits)">
            <summary>
            Specifies the amount of character pitch which shall be added or removed after
            each character in this run before the following character is rendered in the document.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.Spacing" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.SpecVanishValue(DocumentFormat.OpenXml.Wordprocessing.Run)">
            <summary>
            Specifies that the given run shall always behave as if it is hidden,
            even when hidden text is being displayed in the current document.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.SpecVanish" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.StrikeValue(DocumentFormat.OpenXml.Wordprocessing.Run)">
            <summary>
            Specifies that the contents of this run shall be displayed
            with a single horizontal line through the center of the line.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.Strike" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.FontSizeValue(DocumentFormat.OpenXml.Wordprocessing.Run,QuickWord.OpenXml.TextMeasuringUnits)">
            <summary>
            Specifies the font size which shall be applied to all non complex
            script characters in the contents of this run when displayed.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.FontSize" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.ComplexScriptFontSizeValue(DocumentFormat.OpenXml.Wordprocessing.Run,QuickWord.OpenXml.TextMeasuringUnits)">
            <summary>
            Specifies the font size which shall be applied to all complex
            script characters in the contents of this run when displayed.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.FontSizeComplexScript" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.GetUnderline(DocumentFormat.OpenXml.Wordprocessing.Run)">
            <summary>
            Specifies that the contents of this run should be displayed along with
            an underline appearing directly below the character height
            (less all spacing above and below the characters on the line).
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.Underline" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.HiddenValue(DocumentFormat.OpenXml.Wordprocessing.Run)">
            <summary>
            Specifies whether the contents of this run shall be hidden from
            display at display time in a document.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.Vanish" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.VerticalAlignmentValue(DocumentFormat.OpenXml.Wordprocessing.Run)">
            <summary>
            Specifies the alignment which shall be applied to the contents of this run in relation
            to the default appearance of the run's text.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.VerticalTextAlignment" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.CharacterScaleValue(DocumentFormat.OpenXml.Wordprocessing.Run)">
            <summary>
            Specifies the amount by which each character shall be stretched or compressed.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.CharacterScale" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.WebHiddenValue(DocumentFormat.OpenXml.Wordprocessing.Run)">
            <summary>
            Specifies whether the contents of this run shall be hidden from
            display at display time in a document when the document is being
            displayed in a web page view.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.WebHidden" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.Bold(DocumentFormat.OpenXml.Wordprocessing.Run,System.Nullable{System.Boolean})">
            <summary>
            Specifies whether the bold property shall be applied to all non-complex
            script characters in the contents of this run when displayed in a document.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.Bold" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.BoldComplexScript(DocumentFormat.OpenXml.Wordprocessing.Run,System.Nullable{System.Boolean})">
            <summary>
            Specifies whether the bold property shall be applied to all complex
            script characters in the contents of this run when displayed in a document.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.BoldComplexScript" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.Border(DocumentFormat.OpenXml.Wordprocessing.Run,DocumentFormat.OpenXml.Wordprocessing.Border)">
            <summary>
            Specifies information about the border applied to the text in the current run.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.Border" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.AllCaps(DocumentFormat.OpenXml.Wordprocessing.Run,System.Nullable{System.Boolean})">
            <summary>
            Specifies that any lowercase characters in this text run shall
            be formatted for display only as their capital letter character equivalents.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.Caps" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.Color(DocumentFormat.OpenXml.Wordprocessing.Run,DocumentFormat.OpenXml.Wordprocessing.Color)">
            <summary>
            Specifies the color which shall be used to display
            the contents of this run in the document.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.Color" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.ComplexScript(DocumentFormat.OpenXml.Wordprocessing.Run,System.Nullable{System.Boolean})">
            <summary>
            Specifies whether the contents of this run shall be treated
            as complex script text regardless of their Unicode character values when
            determining the formatting for this run.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.ComplexScript" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.DoubleStrike(DocumentFormat.OpenXml.Wordprocessing.Run,System.Nullable{System.Boolean})">
            <summary>
            Specifies that the contents of this run shall be displayed with
            two horizontal lines through each character displayed on the line.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.DoubleStrike" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.EastAsianLayout(DocumentFormat.OpenXml.Wordprocessing.Run,DocumentFormat.OpenXml.Wordprocessing.EastAsianLayout)">
            <summary>
            Specifies any East Asian typography settings which shall
            be applied to the contents of the run.
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.EastAsianLayout" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.TextEffect(DocumentFormat.OpenXml.Wordprocessing.Run,System.Nullable{DocumentFormat.OpenXml.Wordprocessing.TextEffectValues})">
            <summary>
            Specifies an animated text effect which should be displayed when
            rendering the contents of this run.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.TextEffect" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.EmphasisMark(DocumentFormat.OpenXml.Wordprocessing.Run,System.Nullable{DocumentFormat.OpenXml.Wordprocessing.EmphasisMarkValues})">
            <summary>
            Specifies the emphasis mark which shall be displayed for each
            non-space character in this run.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.Emphasis" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.Emboss(DocumentFormat.OpenXml.Wordprocessing.Run,System.Nullable{System.Boolean})">
            <summary>
            Specifies that the contents of this run should be displayed as if embossed,
            which makes text appear as if it is raised off the page in relief.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.Emboss" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.FitText(DocumentFormat.OpenXml.Wordprocessing.Run,DocumentFormat.OpenXml.Wordprocessing.FitText)">
            <summary>
            Specifies that the contents of this run shall not be automatically displayed based
            on the width of its contents, rather its contents shall be resized
            to fit the width specified.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.FitText" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.HighlightColor(DocumentFormat.OpenXml.Wordprocessing.Run,System.Nullable{DocumentFormat.OpenXml.Wordprocessing.HighlightColorValues})">
            <summary>
            Specifies a highlighting color which is applied as
            a background behind the contents of this run.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.Highlight" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.Italic(DocumentFormat.OpenXml.Wordprocessing.Run,System.Nullable{System.Boolean})">
            <summary>
            Specifies whether the italic property should be applied to all non-complex
            script characters in the contents of this run when displayed in a document.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.Italic" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.ItalicComplexScript(DocumentFormat.OpenXml.Wordprocessing.Run,System.Nullable{System.Boolean})">
            <summary>
            Specifies whether the italic property should be applied to all complex
            script characters in the contents of this run when displayed in a document.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.ItalicComplexScript" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.Imprint(DocumentFormat.OpenXml.Wordprocessing.Run,System.Nullable{System.Boolean})">
            <summary>
            Specifies that the contents of this run should be displayed as if imprinted,
            which makes text appear to be imprinted or pressed into page
            (also referred to as 'engrave').
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.Imprint" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.Kerning(DocumentFormat.OpenXml.Wordprocessing.Run,System.Nullable{System.Double},QuickWord.OpenXml.TextMeasuringUnits)">
            <summary>
            Specifies whether font kerning shall be applied to the contents of this run.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.Kern" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.Languages(DocumentFormat.OpenXml.Wordprocessing.Run,DocumentFormat.OpenXml.Wordprocessing.Languages)">
            <summary>
            Specifies the languages which shall be used to check
            spelling and grammar (if requested) when processing the contents of this run.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.Languages" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.NoProofing(DocumentFormat.OpenXml.Wordprocessing.Run,System.Nullable{System.Boolean})">
            <summary>
            Specifies that the contents of this run shall not report
            any errors when the document is scanned for spelling and grammar.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.NoProof" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.OfficeMath(DocumentFormat.OpenXml.Wordprocessing.Run,System.Nullable{System.Boolean})">
            <summary>
            Specifies that this run contains WordprocessingML which shall
            be handled as though it was Office Open XML Math.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.OfficeMath" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.Outline(DocumentFormat.OpenXml.Wordprocessing.Run,System.Nullable{System.Boolean})">
            <summary>
            Specifies that the contents of this run should be displayed as if they have
            an outline, by drawing a one pixel wide border around the inside and outside
            borders of each character glyph in the run.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.Outline" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.VerticalPosition(DocumentFormat.OpenXml.Wordprocessing.Run,System.Nullable{System.Double},QuickWord.OpenXml.TextMeasuringUnits)">
            <summary>
            Specifies the amount by which text shall be raised or lowered for this run in relation
            to the default baseline of the surrounding non-positioned text.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.Position" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.Fonts(DocumentFormat.OpenXml.Wordprocessing.Run,DocumentFormat.OpenXml.Wordprocessing.RunFonts)">
            <summary>
            Specifies the fonts which shall be used to display the text contents of this run.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.RunFonts" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.Style(DocumentFormat.OpenXml.Wordprocessing.Run,System.String)">
            <summary>
            Specifies the style ID of the character style which shall be used to
            format the contents of this paragraph.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.RunStyle" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.RightToLeft(DocumentFormat.OpenXml.Wordprocessing.Run,System.Nullable{System.Boolean})">
            <summary>
            Specifies whether the contents of this run shall have right-to-left characteristics.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.RightToLeftText" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.Shadow(DocumentFormat.OpenXml.Wordprocessing.Run,System.Nullable{System.Boolean})">
            <summary>
            Specifies that the contents of this run shall be displayed as if
            each character has a shadow.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.Shadow" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.Shading(DocumentFormat.OpenXml.Wordprocessing.Run,DocumentFormat.OpenXml.Wordprocessing.Shading)">
            <summary>
            Specifies the shading applied to the contents of the run.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.Shading" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.SmallCaps(DocumentFormat.OpenXml.Wordprocessing.Run,System.Nullable{System.Boolean})">
            <summary>
            Specifies that all small letter characters in this text run shall be formatted for display only
            as their capital letter character equivalents in a font size two points smaller than the actual
            font size specified for this text.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.SmallCaps" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.SnapToGrid(DocumentFormat.OpenXml.Wordprocessing.Run,System.Nullable{System.Boolean})">
            <summary>
            Specifies whether the current paragraph should use the document grid lines per
            page settings defined in the docGrid element (§17.6.5) when laying out
            the contents in the paragraph.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.SnapToGrid" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.CharacterSpacing(DocumentFormat.OpenXml.Wordprocessing.Run,System.Nullable{System.Double},QuickWord.OpenXml.MeasuringUnits)">
            <summary>
            Specifies the amount of character pitch which shall be added or removed after
            each character in this run before the following character is rendered in the document.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.Spacing" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.SpecVanish(DocumentFormat.OpenXml.Wordprocessing.Run,System.Nullable{System.Boolean})">
            <summary>
            Specifies that the given run shall always behave as if it is hidden,
            even when hidden text is being displayed in the current document.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.SpecVanish" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.Strike(DocumentFormat.OpenXml.Wordprocessing.Run,System.Nullable{System.Boolean})">
            <summary>
            Specifies that the contents of this run shall be displayed
            with a single horizontal line through the center of the line.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.Strike" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.FontSize(DocumentFormat.OpenXml.Wordprocessing.Run,System.Nullable{System.Double},QuickWord.OpenXml.TextMeasuringUnits)">
            <summary>
            Specifies the font size which shall be applied to all non complex
            script characters in the contents of this run when displayed.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.FontSize" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.ComplexScriptFontSize(DocumentFormat.OpenXml.Wordprocessing.Run,System.Nullable{System.Double},QuickWord.OpenXml.TextMeasuringUnits)">
            <summary>
            Specifies the font size which shall be applied to all complex
            script characters in the contents of this run when displayed.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.FontSizeComplexScript" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.Underline(DocumentFormat.OpenXml.Wordprocessing.Run,DocumentFormat.OpenXml.Wordprocessing.Underline)">
            <summary>
            Specifies that the contents of this run should be displayed along with
            an underline appearing directly below the character height
            (less all spacing above and below the characters on the line).
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.Underline" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.Hidden(DocumentFormat.OpenXml.Wordprocessing.Run,System.Nullable{System.Boolean})">
            <summary>
            Specifies whether the contents of this run shall be hidden from
            display at display time in a document.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.Vanish" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.VerticalAlignment(DocumentFormat.OpenXml.Wordprocessing.Run,System.Nullable{DocumentFormat.OpenXml.Wordprocessing.VerticalPositionValues})">
            <summary>
            Specifies the alignment which shall be applied to the contents of this run in relation
            to the default appearance of the run's text.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.VerticalTextAlignment" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.CharacterScale(DocumentFormat.OpenXml.Wordprocessing.Run,System.Nullable{System.Int64})">
            <summary>
            Specifies the amount by which each character shall be stretched or compressed.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.CharacterScale" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.RunExtensions.WebHidden(DocumentFormat.OpenXml.Wordprocessing.Run,System.Nullable{System.Boolean})">
            <summary>
            Specifies whether the contents of this run shall be hidden from
            display at display time in a document when the document is being
            displayed in a web page view.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.WebHidden" /></para>
            </summary>
        </member>
        <member name="T:QuickWord.OpenXml.TableCellExtensions">
            <summary>
            A set of extension methods for the <see cref="T:DocumentFormat.OpenXml.Wordprocessing.TableCell" /> class.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableCellExtensions.GetConditionalFormatStyle(DocumentFormat.OpenXml.Wordprocessing.TableCell)">
            <summary>
            Specifies the set of conditional table style formatting properties which
            have been applied to this paragraph, if this paragraph is contained
            within a table cell.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.ConditionalFormatStyle" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableCellExtensions.GridSpanValue(DocumentFormat.OpenXml.Wordprocessing.TableCell)">
            <summary>
            Specifies the number of grid columns in the parent table's
            table grid which shall be spanned by the current cell.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.GridSpan" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableCellExtensions.HideEndOfCellMarkerValue(DocumentFormat.OpenXml.Wordprocessing.TableCell)">
            <summary>
            Specifies whether the end of cell glyph shall influence
            the height of the given table row in the table.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.HideMark" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableCellExtensions.HorizontalMergeValue(DocumentFormat.OpenXml.Wordprocessing.TableCell)">
            <summary>
            Specifies that this cell is part of a horizontally merged set of cells in a table.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.HorizontalMerge" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableCellExtensions.NoContentWrappingValue(DocumentFormat.OpenXml.Wordprocessing.TableCell)">
            <summary>
            Specifies how this table cell shall be laid out when the parent
            table is displayed in a document.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.NoWrap" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableCellExtensions.GetShading(DocumentFormat.OpenXml.Wordprocessing.TableCell)">
            <summary>
            Specifies the shading applied to the contents of the cell.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.Shading" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableCellExtensions.GetBorders(DocumentFormat.OpenXml.Wordprocessing.TableCell)">
            <summary>
            Specifies the set of borders for the edges of the current
            table cell, using the eight border types defined by its child elements.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.TableCellBorders" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableCellExtensions.FitTextValue(DocumentFormat.OpenXml.Wordprocessing.TableCell)">
            <summary>
            Specifies that the contents of the current cell shall have their
            inter-character spacing increased or reduced as necessary to fit
            the width of the text extents of the current cell.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.TableCellFitText" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableCellExtensions.GetMargins(DocumentFormat.OpenXml.Wordprocessing.TableCell)">
            <summary>
            Specifies a set of cell margins for a single table cell in the parent table.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.TableCellMargin" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableCellExtensions.GetWidth(DocumentFormat.OpenXml.Wordprocessing.TableCell)">
            <summary>
            Specifies the preferred width for this table cell.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.TableCellWidth" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableCellExtensions.TextDirectionValue(DocumentFormat.OpenXml.Wordprocessing.TableCell)">
            <summary>
            Specifies the direction of the text flow for this cell.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.TextDirection" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableCellExtensions.VerticalContentAlignmentValue(DocumentFormat.OpenXml.Wordprocessing.TableCell)">
            <summary>
            Specifies the vertical alignment of the contents of the current cell.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.TableCellVerticalAlignment" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableCellExtensions.VerticalMergeValue(DocumentFormat.OpenXml.Wordprocessing.TableCell)">
            <summary>
            Specifies that this cell is part of a vertically merged set of cells in a table.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.VerticalMerge" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableCellExtensions.ConditionalFormatStyle(DocumentFormat.OpenXml.Wordprocessing.TableCell,DocumentFormat.OpenXml.Wordprocessing.ConditionalFormatStyle)">
            <summary>
            Specifies the set of conditional table style formatting properties which
            have been applied to this paragraph, if this paragraph is contained
            within a table cell.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.ConditionalFormatStyle" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableCellExtensions.GridSpan(DocumentFormat.OpenXml.Wordprocessing.TableCell,System.Nullable{System.Int32})">
            <summary>
            Specifies the number of grid columns in the parent table's
            table grid which shall be spanned by the current cell.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.GridSpan" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableCellExtensions.HideEndOfCellMarker(DocumentFormat.OpenXml.Wordprocessing.TableCell,System.Nullable{System.Boolean})">
            <summary>
            Specifies whether the end of cell glyph shall influence
            the height of the given table row in the table.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.HideMark" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableCellExtensions.HorizontalMerge(DocumentFormat.OpenXml.Wordprocessing.TableCell,System.Nullable{DocumentFormat.OpenXml.Wordprocessing.MergedCellValues})">
            <summary>
            Specifies that this cell is part of a horizontally merged set of cells in a table.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.HorizontalMerge" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableCellExtensions.NoContentWrapping(DocumentFormat.OpenXml.Wordprocessing.TableCell,System.Nullable{System.Boolean})">
            <summary>
            Specifies how this table cell shall be laid out when the parent
            table is displayed in a document.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.NoWrap" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableCellExtensions.Shading(DocumentFormat.OpenXml.Wordprocessing.TableCell,DocumentFormat.OpenXml.Wordprocessing.Shading)">
            <summary>
            Specifies the shading applied to the contents of the cell.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.Shading" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableCellExtensions.Borders(DocumentFormat.OpenXml.Wordprocessing.TableCell,DocumentFormat.OpenXml.Wordprocessing.TableCellBorders)">
            <summary>
            Specifies the set of borders for the edges of the current
            table cell, using the eight border types defined by its child elements.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.TableCellBorders" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableCellExtensions.FitText(DocumentFormat.OpenXml.Wordprocessing.TableCell,System.Nullable{System.Boolean})">
            <summary>
            Specifies that the contents of the current cell shall have their
            inter-character spacing increased or reduced as necessary to fit
            the width of the text extents of the current cell.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.TableCellFitText" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableCellExtensions.Margin(DocumentFormat.OpenXml.Wordprocessing.TableCell,DocumentFormat.OpenXml.Wordprocessing.TableCellMargin)">
            <summary>
            Specifies a set of cell margins for a single table cell in the parent table.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.TableCellMargin" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableCellExtensions.Width(DocumentFormat.OpenXml.Wordprocessing.TableCell,DocumentFormat.OpenXml.Wordprocessing.TableCellWidth)">
            <summary>
            Specifies the preferred width for this table cell.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.TableCellWidth" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableCellExtensions.TextDirection(DocumentFormat.OpenXml.Wordprocessing.TableCell,System.Nullable{DocumentFormat.OpenXml.Wordprocessing.TextDirectionValues})">
            <summary>
            Specifies the direction of the text flow for this cell.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.TextDirection" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableCellExtensions.VerticalContentAlignment(DocumentFormat.OpenXml.Wordprocessing.TableCell,System.Nullable{DocumentFormat.OpenXml.Wordprocessing.TableVerticalAlignmentValues})">
            <summary>
            Specifies the vertical alignment of the contents of the current cell.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.TableCellVerticalAlignment" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableCellExtensions.VerticalMerge(DocumentFormat.OpenXml.Wordprocessing.TableCell,System.Nullable{DocumentFormat.OpenXml.Wordprocessing.MergedCellValues})">
            <summary>
            Specifies that this cell is part of a vertically merged set of cells in a table.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.VerticalMerge" /></para>
            </summary>
        </member>
        <member name="T:QuickWord.OpenXml.TableExtensions">
            <summary>
            A set of extension methods for the <see cref="T:DocumentFormat.OpenXml.Wordprocessing.Table" /> class.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableExtensions.GetTableProperties(DocumentFormat.OpenXml.Wordprocessing.Table)">
            <summary>
            Gets the <see cref="T:DocumentFormat.OpenXml.Wordprocessing.TableProperties" /> object of the <see cref="T:DocumentFormat.OpenXml.Wordprocessing.Table" />.
            <para>Returns <see langword="null" /> if the node doesn't exist.</para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableExtensions.VisuallyBiDirectionalValue(DocumentFormat.OpenXml.Wordprocessing.Table)">
            <summary>
            Specifies that the cells with this table shall be visually
            represented in a right to left direction.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.BiDiVisual" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableExtensions.JustificationValue(DocumentFormat.OpenXml.Wordprocessing.Table)">
            <summary>
            Specifies the alignment of the set of rows which are part of the current
            table properties exception list with respect to the text margins in
            the current section.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.TableJustification" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableExtensions.GetShading(DocumentFormat.OpenXml.Wordprocessing.Table)">
            <summary>
            Specifies the shading applied to the contents of the table.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.Shading" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableExtensions.GetBorders(DocumentFormat.OpenXml.Wordprocessing.Table)">
            <summary>
            Specifies the set of borders for the edges of the current table,
            using the six border types defined by its child elements.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.TableBorders" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableExtensions.CaptionValue(DocumentFormat.OpenXml.Wordprocessing.Table)">
            <summary>
            Specifies the caption for the table.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.TableCaption" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableExtensions.GetDefaultCellMargins(DocumentFormat.OpenXml.Wordprocessing.Table)">
            <summary>
            Specifies a set of cell margins for all cells in the parent table row
            via a set of table-level property exceptions.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.TableCellMarginDefault" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableExtensions.GetCellSpacing(DocumentFormat.OpenXml.Wordprocessing.Table)">
            <summary>
            Specifies the default table cell spacing (the spacing between adjacent
            cells and the edges of the table) for all cells in the parent row.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.TableCellSpacing" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableExtensions.DescriptionValue(DocumentFormat.OpenXml.Wordprocessing.Table)">
            <summary>
            Specifies the description for the table.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.TableDescription" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableExtensions.GetIndentation(DocumentFormat.OpenXml.Wordprocessing.Table)">
            <summary>
            Specifies the indentation which shall be added before the leading edge of the current
            table in the document (the left edge in a left-to-right table, and the right edge
            in a right-to-left table).
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.TableIndentation" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableExtensions.LayoutValue(DocumentFormat.OpenXml.Wordprocessing.Table)">
            <summary>
            Specifies the algorithm which shall be used to lay out
            the contents of this table within the document.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.TableLayout" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableExtensions.GetLook(DocumentFormat.OpenXml.Wordprocessing.Table)">
            <summary>
            Specifies the components of the conditional formatting of the referenced
            table style (if one exists) which shall be applied to the set of table rows
            with the current table-level property exceptions.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.TableLook" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableExtensions.OverlapValue(DocumentFormat.OpenXml.Wordprocessing.Table)">
            <summary>
            Specifies whether the current table shall allow other floating tables to overlap
            its extents when the tables are displayed in a document.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.TableOverlap" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableExtensions.GetPositionProperties(DocumentFormat.OpenXml.Wordprocessing.Table)">
            <summary>
            Specifies information about the current table with regard to floating tables.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.TablePositionProperties" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableExtensions.StyleValue(DocumentFormat.OpenXml.Wordprocessing.Table)">
            <summary>
            Specifies the style ID of the table style which shall be used
            to format the contents of this table.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.TableStyle" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableExtensions.StyleColumnBandSizeValue(DocumentFormat.OpenXml.Wordprocessing.Table)">
            <summary>
            Specifies the number of columns which shall
            comprise each a table style column band for this table style.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.TableStyleColumnBandSize" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableExtensions.StyleRowBandSizeValue(DocumentFormat.OpenXml.Wordprocessing.Table)">
            <summary>
            Specifies the number of rows which shall
            comprise each a table style row band for this table style.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.TableStyleRowBandSize" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableExtensions.GetWidth(DocumentFormat.OpenXml.Wordprocessing.Table)">
            <summary>
            Specifies the preferred width for this table.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.TableWidth" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableExtensions.VisuallyBiDirectional(DocumentFormat.OpenXml.Wordprocessing.Table,System.Nullable{System.Boolean})">
            <summary>
            Specifies that the cells with this table shall be visually
            represented in a right to left direction.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.BiDiVisual" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableExtensions.Justification(DocumentFormat.OpenXml.Wordprocessing.Table,System.Nullable{DocumentFormat.OpenXml.Wordprocessing.TableRowAlignmentValues})">
            <summary>
            Specifies the alignment of the set of rows which are part of the current
            table properties exception list with respect to the text margins in
            the current section.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.TableJustification" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableExtensions.Shading(DocumentFormat.OpenXml.Wordprocessing.Table,DocumentFormat.OpenXml.Wordprocessing.Shading)">
            <summary>
            Specifies the shading applied to the contents of the table.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.Shading" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableExtensions.Borders(DocumentFormat.OpenXml.Wordprocessing.Table,DocumentFormat.OpenXml.Wordprocessing.TableBorders)">
            <summary>
            Specifies the set of borders for the edges of the current table,
            using the six border types defined by its child elements.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.TableBorders" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableExtensions.Caption(DocumentFormat.OpenXml.Wordprocessing.Table,System.String)">
            <summary>
            Specifies the caption for the table.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.TableCaption" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableExtensions.DefaultCellMargins(DocumentFormat.OpenXml.Wordprocessing.Table,DocumentFormat.OpenXml.Wordprocessing.TableCellMarginDefault)">
            <summary>
            Specifies a set of cell margins for all cells in the parent table row
            via a set of table-level property exceptions.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.TableCellMarginDefault" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableExtensions.CellSpacing(DocumentFormat.OpenXml.Wordprocessing.Table,DocumentFormat.OpenXml.Wordprocessing.TableCellSpacing)">
            <summary>
            Specifies the default table cell spacing (the spacing between adjacent
            cells and the edges of the table) for all cells in the parent row.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.TableCellSpacing" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableExtensions.Description(DocumentFormat.OpenXml.Wordprocessing.Table,System.String)">
            <summary>
            Specifies the description for the table.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.TableDescription" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableExtensions.Indentation(DocumentFormat.OpenXml.Wordprocessing.Table,DocumentFormat.OpenXml.Wordprocessing.TableIndentation)">
            <summary>
            Specifies the indentation which shall be added before the leading edge of the current
            table in the document (the left edge in a left-to-right table, and the right edge
            in a right-to-left table).
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.TableIndentation" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableExtensions.Layout(DocumentFormat.OpenXml.Wordprocessing.Table,System.Nullable{DocumentFormat.OpenXml.Wordprocessing.TableLayoutValues})">
            <summary>
            Specifies the algorithm which shall be used to lay out
            the contents of this table within the document.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.TableLayout" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableExtensions.Look(DocumentFormat.OpenXml.Wordprocessing.Table,DocumentFormat.OpenXml.Wordprocessing.TableLook)">
            <summary>
            Specifies the components of the conditional formatting of the referenced
            table style (if one exists) which shall be applied to the set of table rows
            with the current table-level property exceptions.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.TableLook" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableExtensions.Overlap(DocumentFormat.OpenXml.Wordprocessing.Table,System.Nullable{DocumentFormat.OpenXml.Wordprocessing.TableOverlapValues})">
            <summary>
            Specifies whether the current table shall allow other floating tables to overlap
            its extents when the tables are displayed in a document.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.TableOverlap" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableExtensions.PositionProperties(DocumentFormat.OpenXml.Wordprocessing.Table,DocumentFormat.OpenXml.Wordprocessing.TablePositionProperties)">
            <summary>
            Specifies information about the current table with regard to floating tables.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.TablePositionProperties" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableExtensions.Style(DocumentFormat.OpenXml.Wordprocessing.Table,System.String)">
            <summary>
            Specifies the style ID of the table style which shall be used
            to format the contents of this table.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.TableStyle" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableExtensions.StyleColumnBandSize(DocumentFormat.OpenXml.Wordprocessing.Table,System.Nullable{System.Int32})">
            <summary>
            Specifies the number of columns which shall
            comprise each a table style column band for this table style.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.TableStyleColumnBandSize" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableExtensions.StyleRowBandSize(DocumentFormat.OpenXml.Wordprocessing.Table,System.Nullable{System.Int32})">
            <summary>
            Specifies the number of rows which shall
            comprise each a table style row band for this table style.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.TableStyleRowBandSize" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableExtensions.Width(DocumentFormat.OpenXml.Wordprocessing.Table,DocumentFormat.OpenXml.Wordprocessing.TableWidth)">
            <summary>
            Specifies the preferred width for this table.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.TableWidth" /></para>
            </summary>
        </member>
        <member name="T:QuickWord.OpenXml.TableRowExtensions">
            <summary>
            A set of extension methods for the <see cref="T:DocumentFormat.OpenXml.Wordprocessing.TableRow" /> class.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableRowExtensions.CantSplitValue(DocumentFormat.OpenXml.Wordprocessing.TableRow)">
            <summary>
            Specifies whether the contents within the current cell shall
            be rendered on a single page.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.CantSplit" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableRowExtensions.GetConditionalFormatStyle(DocumentFormat.OpenXml.Wordprocessing.TableRow)">
            <summary>
            Specifies the set of conditional table style formatting properties
            which have been applied to this paragraph, if this paragraph
            is contained within a table cell.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.ConditionalFormatStyle" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableRowExtensions.DivIdValue(DocumentFormat.OpenXml.Wordprocessing.TableRow)">
            <summary>
            Specifies that this paragraph should be located within the specified
            HTML <i>div</i> tag when this document is saved in HTML format.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.DivId" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableRowExtensions.GridAfterValue(DocumentFormat.OpenXml.Wordprocessing.TableRow)">
            <summary>
            Specifies the number of grid columns in the parent table's table grid
            (§17.4.49; §17.4.48) which shall be left after the last cell in the table row.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.GridAfter" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableRowExtensions.GridBeforeValue(DocumentFormat.OpenXml.Wordprocessing.TableRow)">
            <summary>
            Specifies the number of grid columns in the parent table's table grid
            (§17.4.49; §17.4.48) which must be skipped before the contents
            of this table row (its table cells) are added to the parent table.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.GridBefore" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableRowExtensions.HideEndOfRowMarkerValue(DocumentFormat.OpenXml.Wordprocessing.TableRow)">
            <summary>
            Specifies that the glyph representing the end character of current
            table row shall not be displayed in the current document.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.Hidden" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableRowExtensions.JustificationValue(DocumentFormat.OpenXml.Wordprocessing.TableRow)">
            <summary>
            Specifies the alignment of the set of rows which are part
            of the current table properties exception list with respect
            to the text margins in the current section.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.TableJustification" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableRowExtensions.IsHeaderValue(DocumentFormat.OpenXml.Wordprocessing.TableRow)">
            <summary>
            Specifies that the current table row shall be repeated at the top
            of each new page on which part of this table is displayed.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.TableHeader" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableRowExtensions.GetHeight(DocumentFormat.OpenXml.Wordprocessing.TableRow)">
            <summary>
            Specifies the height of the current table row within the current table.
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.TableRowHeight" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableRowExtensions.GetWidthAfter(DocumentFormat.OpenXml.Wordprocessing.TableRow)">
            <summary>
            Specifies the preferred width for the total number of grid columns
            after this table row as specified in the gridAfter element (§17.4.14).
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.WidthAfterTableRow" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableRowExtensions.GetWidthBefore(DocumentFormat.OpenXml.Wordprocessing.TableRow)">
            <summary>
            Specifies the preferred width for the total number of grid columns
            before this table row as specified in the gridAfter element (§17.4.14).
            <para>Returns <see langword="null" /> if the property node doesn't exist.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.WidthBeforeTableRow" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableRowExtensions.CantSplit(DocumentFormat.OpenXml.Wordprocessing.TableRow,System.Nullable{System.Boolean})">
            <summary>
            Specifies whether the contents within the current cell shall
            be rendered on a single page.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.CantSplit" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableRowExtensions.ConditionalFormatStyle(DocumentFormat.OpenXml.Wordprocessing.TableRow,DocumentFormat.OpenXml.Wordprocessing.ConditionalFormatStyle)">
            <summary>
            Specifies the set of conditional table style formatting properties
            which have been applied to this paragraph, if this paragraph
            is contained within a table cell.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.ConditionalFormatStyle" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableRowExtensions.DivId(DocumentFormat.OpenXml.Wordprocessing.TableRow,System.String)">
            <summary>
            Specifies that this paragraph should be located within the specified
            HTML <i>div</i> tag when this document is saved in HTML format.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.DivId" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableRowExtensions.GridAfter(DocumentFormat.OpenXml.Wordprocessing.TableRow,System.Nullable{System.Int32})">
            <summary>
            Specifies the number of grid columns in the parent table's table grid
            (§17.4.49; §17.4.48) which shall be left after the last cell in the table row.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.GridAfter" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableRowExtensions.GridBefore(DocumentFormat.OpenXml.Wordprocessing.TableRow,System.Nullable{System.Int32})">
            <summary>
            Specifies the number of grid columns in the parent table's table grid
            (§17.4.49; §17.4.48) which must be skipped before the contents
            of this table row (its table cells) are added to the parent table.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.GridBefore" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableRowExtensions.HideEndOfRowMarker(DocumentFormat.OpenXml.Wordprocessing.TableRow,System.Nullable{System.Boolean})">
            <summary>
            Specifies that the glyph representing the end character of current
            table row shall not be displayed in the current document.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.Hidden" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableRowExtensions.Justification(DocumentFormat.OpenXml.Wordprocessing.TableRow,System.Nullable{DocumentFormat.OpenXml.Wordprocessing.TableRowAlignmentValues})">
            <summary>
            Specifies the alignment of the set of rows which are part
            of the current table properties exception list with respect
            to the text margins in the current section.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.TableJustification" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableRowExtensions.IsHeader(DocumentFormat.OpenXml.Wordprocessing.TableRow,System.Nullable{System.Boolean})">
            <summary>
            Specifies that the current table row shall be repeated at the top
            of each new page on which part of this table is displayed.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.TableHeader" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableRowExtensions.Height(DocumentFormat.OpenXml.Wordprocessing.TableRow,DocumentFormat.OpenXml.Wordprocessing.TableRowHeight)">
            <summary>
            Specifies the height of the current table row within the current table.
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.TableRowHeight" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableRowExtensions.WidthAfter(DocumentFormat.OpenXml.Wordprocessing.TableRow,DocumentFormat.OpenXml.Wordprocessing.WidthAfterTableRow)">
            <summary>
            Specifies the preferred width for the total number of grid columns
            after this table row as specified in the gridAfter element (§17.4.14).
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.WidthAfterTableRow" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.TableRowExtensions.WidthBefore(DocumentFormat.OpenXml.Wordprocessing.TableRow,DocumentFormat.OpenXml.Wordprocessing.WidthBeforeTableRow)">
            <summary>
            Specifies the preferred width for the total number of grid columns
            before this table row as specified in the gridAfter element (§17.4.14).
            <para>Setting this to <see langword="null" /> will remove the property node from the document.</para>
            <para><see href="https://learn.microsoft.com/en-us/dotnet/api/DocumentFormat.OpenXml.Wordprocessing.WidthBeforeTableRow" /></para>
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.Utilities.OpenXmlElementExtensions.GetOrInit``1(DocumentFormat.OpenXml.OpenXmlElement,System.Boolean)">
            <summary>
            Gets the child of the specified type, or initializes / appends a new one if it doesn't exist.
            </summary>
            <typeparam name="TProperty">OpenXml property class, such as <see cref="T:DocumentFormat.OpenXml.Wordprocessing.Shading" />, <see cref="T:DocumentFormat.OpenXml.Wordprocessing.RunFonts" /> or <see cref="T:DocumentFormat.OpenXml.Wordprocessing.Bold" />.</typeparam>
            <param name="propertyHost">The property host, such as <see cref="T:DocumentFormat.OpenXml.Wordprocessing.RunProperties" />, <see cref="T:DocumentFormat.OpenXml.Wordprocessing.TableBorders" /> or even just a <see cref="T:DocumentFormat.OpenXml.Wordprocessing.Paragraph" />.</param>
        </member>
        <member name="M:QuickWord.OpenXml.Utilities.OpenXmlElementExtensions.SetFieldOrRemove``1(DocumentFormat.OpenXml.OpenXmlElement,System.String,System.Object)">
            <summary>
            Sets the value of the specified field of an OpenXml property class, such as <see cref="T:DocumentFormat.OpenXml.Wordprocessing.Bold" /> or <see cref="T:DocumentFormat.OpenXml.Wordprocessing.FontSize" />.
            <para>Removes the property if <see langword="null" /> is passed.</para>
            </summary>
            <typeparam name="TProperty">OpenXml property class, such as <see cref="T:DocumentFormat.OpenXml.Wordprocessing.Bold" /> or <see cref="T:DocumentFormat.OpenXml.Wordprocessing.FontSize" />.</typeparam>
            <param name="fieldName">The name of the field, such as "Val".</param>
            <param name="propertyHost">The property host, such as <see cref="T:DocumentFormat.OpenXml.Wordprocessing.RunProperties" />, <see cref="T:DocumentFormat.OpenXml.Wordprocessing.ParagraphProperties" /> or <see cref="T:DocumentFormat.OpenXml.Wordprocessing.TableBorders" />.</param>
        </member>
        <member name="M:QuickWord.OpenXml.Utilities.OpenXmlElementExtensions.SetValOrRemove``1(DocumentFormat.OpenXml.OpenXmlElement,System.Object)">
            <summary>
            Sets the value of the "Val" field of an OpenXml property class, such as <see cref="T:DocumentFormat.OpenXml.Wordprocessing.Bold" /> or <see cref="T:DocumentFormat.OpenXml.Wordprocessing.FontSize" />.
            <para>Removes the property if <see langword="null" /> is passed.</para>
            </summary>
            <typeparam name="TProperty">OpenXml property class, such as <see cref="T:DocumentFormat.OpenXml.Wordprocessing.Bold" /> or <see cref="T:DocumentFormat.OpenXml.Wordprocessing.FontSize" />.</typeparam>
            <param name="propertyHost">The property host, such as <see cref="T:DocumentFormat.OpenXml.Wordprocessing.RunProperties" />, <see cref="T:DocumentFormat.OpenXml.Wordprocessing.ParagraphProperties" /> or <see cref="T:DocumentFormat.OpenXml.Wordprocessing.TableBorders" />.</param>
        </member>
        <member name="M:QuickWord.OpenXml.Utilities.OpenXmlElementExtensions.SetPropertyClassOrRemove``1(DocumentFormat.OpenXml.OpenXmlElement,``0)">
            <summary>
            Sets the value of an OpenXml property class child, such as <see cref="T:DocumentFormat.OpenXml.Wordprocessing.Shading" /> or <see cref="T:DocumentFormat.OpenXml.Wordprocessing.RunFonts" />.
            <para>Removes the property if <see langword="null" /> is passed.</para>
            </summary>
            <typeparam name="TProperty">OpenXml property class, such as <see cref="T:DocumentFormat.OpenXml.Wordprocessing.Shading" /> or <see cref="T:DocumentFormat.OpenXml.Wordprocessing.RunFonts" />.</typeparam>
            <param name="propertyHost">The property host, such as <see cref="T:DocumentFormat.OpenXml.Wordprocessing.RunProperties" />, <see cref="T:DocumentFormat.OpenXml.Wordprocessing.ParagraphProperties" /> or <see cref="T:DocumentFormat.OpenXml.Wordprocessing.TableBorders" />.</param>
        </member>
        <member name="M:QuickWord.OpenXml.Utilities.OpenXmlElementExtensions.SetExactField(DocumentFormat.OpenXml.OpenXmlElement,System.String,System.Object)">
            <summary>
            Sets the value of the specified field of an OpenXml property class, such as <see cref="T:DocumentFormat.OpenXml.Wordprocessing.Shading" />, <see cref="T:DocumentFormat.OpenXml.Wordprocessing.RunFonts" /> or <see cref="T:DocumentFormat.OpenXml.Wordprocessing.Bold" />.
            </summary>
            <param name="propertyElement">The property element, such as <see cref="T:DocumentFormat.OpenXml.Wordprocessing.Shading" />, <see cref="T:DocumentFormat.OpenXml.Wordprocessing.RunFonts" /> or <see cref="T:DocumentFormat.OpenXml.Wordprocessing.Bold" />.</param>
            <param name="fieldName">Name of the target field, such as <c>"Fill"</c> from <see cref="T:DocumentFormat.OpenXml.Wordprocessing.Shading" />, <c>"Ascii"</c> from <see cref="T:DocumentFormat.OpenXml.Wordprocessing.RunFonts" /> or <c>"Val"</c> from <see cref="T:DocumentFormat.OpenXml.Wordprocessing.Bold" />.</param>
        </member>
        <member name="M:QuickWord.OpenXml.Utilities.UtilityExtensions.ToCropping(DocumentFormat.OpenXml.Drawing.SourceRectangle)">
            <summary>
            Creates a new <see cref="T:QuickWord.OpenXml.DrawingExtensions.Cropping" /> object, based on the values of the given <see cref="T:DocumentFormat.OpenXml.Drawing.SourceRectangle"/>.
            </summary>
            <returns>The <see cref="T:QuickWord.OpenXml.DrawingExtensions.Cropping" /> object.</returns>
        </member>
        <member name="T:QuickWord.OpenXml.WordprocessingDocumentExtensions">
            <summary>
            A set of extension methods for the <see cref="T:DocumentFormat.OpenXml.Packaging.WordprocessingDocument" /> class.
            </summary>
        </member>
        <member name="M:QuickWord.OpenXml.WordprocessingDocumentExtensions.CreateBody(DocumentFormat.OpenXml.Packaging.WordprocessingDocument)">
            <summary>
            Creates a new body and adds it to the document.
            </summary>
            <returns>The <see cref="T:DocumentFormat.OpenXml.Wordprocessing.Body" /> object</returns>
        </member>
    </members>
</doc>
